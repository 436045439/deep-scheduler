{"split":"2-0","session.current":["/multiq_sim.py","/scheduling.py"],"session.open":{"/multiq_sim.py":{"scrollTop":5271.5,"scrollLeft":0,"selection":{"start":{"row":345,"column":28},"end":{"row":345,"column":48}},"lastUse":1515622765772,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":36},"end":{"row":335,"column":37}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":37},"end":{"row":335,"column":38}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":38},"end":{"row":335,"column":39}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":39},"end":{"row":335,"column":40}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":40},"end":{"row":335,"column":41}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":41},"end":{"row":335,"column":42}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":42},"end":{"row":335,"column":43}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":43},"end":{"row":335,"column":44}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":43},"end":{"row":335,"column":44}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":41},"end":{"row":335,"column":43}},"text":"be"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":40},"end":{"row":335,"column":41}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":39},"end":{"row":335,"column":40}},"text":"y"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":38},"end":{"row":335,"column":39}},"text":"a"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":37},"end":{"row":335,"column":38}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":37},"end":{"row":335,"column":38}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":38},"end":{"row":335,"column":39}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":39},"end":{"row":335,"column":40}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":40},"end":{"row":335,"column":41}},"text":"m"},{"action":"insertText","range":{"start":{"row":335,"column":41},"end":{"row":335,"column":42}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":42},"end":{"row":335,"column":43}},"text":"j"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":43},"end":{"row":335,"column":44}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":44},"end":{"row":335,"column":45}},"text":"b"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":45},"end":{"row":335,"column":46}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":46},"end":{"row":335,"column":47}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":47},"end":{"row":335,"column":48}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":48},"end":{"row":335,"column":49}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":49},"end":{"row":335,"column":50}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":50},"end":{"row":335,"column":51}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":51},"end":{"row":335,"column":52}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":52},"end":{"row":335,"column":53}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":53},"end":{"row":335,"column":54}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":54},"end":{"row":335,"column":55}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":55},"end":{"row":335,"column":56}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":56},"end":{"row":335,"column":57}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":57},"end":{"row":335,"column":58}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":58},"end":{"row":335,"column":59}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":59},"end":{"row":335,"column":60}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":60},"end":{"row":335,"column":61}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":61},"end":{"row":335,"column":62}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":62},"end":{"row":335,"column":63}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":63},"end":{"row":335,"column":64}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":64},"end":{"row":335,"column":65}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":65},"end":{"row":335,"column":66}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":66},"end":{"row":335,"column":67}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":67},"end":{"row":335,"column":68}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":68},"end":{"row":335,"column":69}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":69},"end":{"row":335,"column":70}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":70},"end":{"row":335,"column":71}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":71},"end":{"row":335,"column":72}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":72},"end":{"row":335,"column":73}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":73},"end":{"row":335,"column":74}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":74},"end":{"row":335,"column":75}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":75},"end":{"row":335,"column":76}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":76},"end":{"row":335,"column":77}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":77},"end":{"row":335,"column":78}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":78},"end":{"row":335,"column":79}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":79},"end":{"row":335,"column":80}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":80},"end":{"row":335,"column":81}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":81},"end":{"row":335,"column":82}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":82},"end":{"row":335,"column":83}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":83},"end":{"row":335,"column":84}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":84},"end":{"row":335,"column":85}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":335,"column":80},"end":{"row":335,"column":81}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":335,"column":80},"end":{"row":335,"column":81}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":353,"column":0},"end":{"row":354,"column":0}},"nl":"\n","lines":["        self.jid_info_m.pop(jid)"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":351,"column":31},"end":{"row":351,"column":32}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":339,"column":9},"end":{"row":339,"column":51}},"text":"(self.env.now - jinfo['ent'] )/jinfo['ts']"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":339,"column":0},"end":{"row":340,"column":0}},"nl":"\n","lines":["    sl = "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":339,"column":33},"end":{"row":339,"column":35}},"text":"sl"},{"action":"insertText","range":{"start":{"row":339,"column":33},"end":{"row":339,"column":75}},"text":"(self.env.now - jinfo['ent'] )/jinfo['ts']"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":341,"column":4},"end":{"row":341,"column":9}},"text":"try: "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":342,"column":0},"end":{"row":343,"column":0}},"nl":"\n","lines":["    except: pass"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":323,"column":28},"end":{"row":323,"column":31}},"text":"jid"},{"action":"insertText","range":{"start":{"row":323,"column":28},"end":{"row":323,"column":33}},"text":"j._id"}]}]],"redo":[]},"/shorthestq_sim.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"lastUse":1515622442646,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":67}},"text":"import sys, pprint, math, numpy, simpy, getopt, itertools, operator"},{"action":"insertText","range":{"start":{"row":0,"column":67},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":401,"column":0}},"lines":["","from rvs import *","from arepeat_models import *","from arepeat_sim import *","","# ************************  Multiple Qs for Jobs with multiple Tasks  **************************** #","class Job(object):","  def __init__(self, _id, k, tsize, n=0):","    self._id = _id","    self.k = k","    self.tsize = tsize","    self.n = n","    self.prev_hop_id = None","  ","  def __repr__(self):","    return \"Job[id= {}, k= {}, n= {}]\".format(self._id, self.k, self.n)","  ","  def deep_copy(self):","    j = Job(self._id, self.k, self.tsize, self.n)","    j.prev_hop_id = self.prev_hop_id","    return j","","class JG(object): # Job Generator","  def __init__(self, env, ar, k_dist, tsize_dist):","    self.env = env","    self.ar = ar","    self.k_dist = k_dist","    self.tsize_dist = tsize_dist","    ","    self.nsent = 0","    self.out = None","    ","    self.action = None","  ","  def init(self):","    self.action = self.env.process(self.run() )","  ","  def run(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      ","      self.nsent += 1","      k = self.k_dist.gen_sample()","      tsize = self.tsize_dist.gen_sample()","      self.out.put(Job(self.nsent, k, tsize) )","","class Task(object):","  def __init__(self, jid, k, size, remaining):","    self.jid = jid","    self.k = k","    self.size = size","    self.remaining = remaining","    ","    self.prev_hop_id = None","    self.ent_time = None","  ","  def __repr__(self):","    return \"Task[jid= {}, k= {}, size= {}, remaining= {}]\".format(self.jid, self.k, self.size, self.remaining)","  ","  def deep_copy(self):","    t = Task(self.jid, self.k, self.size, self.remaining)","    t.prev_hop_id = self.prev_hop_id","    t.ent_time = self.ent_time","    return t","","class PSQ(object): # Process Sharing Queue","  def __init__(self, _id, env, h, out):","    self._id = _id","    self.env = env","    self.h = h","    self.out = out","    ","    self.t_l = []","    self.tinserv_l = []","    self.got_busy = None","    self.sinterrupt = None","    self.add_to_serv = False","    self.cancel = False","    self.cancel_jid = None","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.serv_run() )","    self.action = env.process(self.put_run() )","    ","    self.lt_l = []","    self.sl_l = []","  ","  def __repr__(self):","    return \"PSQ[id= {}]\".format(self._id)","  ","  def length(self):","    return len(self.t_l)","  ","  def serv_run(self):","    while True:","      self.tinserv_l = self.t_l[:self.h]","      if len(self.tinserv_l) == 0:","        # sim_log(DEBUG, self.env, self, \"idle; waiting for arrival\", None)","        self.got_busy = self.env.event()","        yield (self.got_busy)","        # sim_log(DEBUG, self.env, self, \"got busy!\", None)","        continue","      # TODO: This seems wrong","      # t_justmovedHoL = self.tinserv_l[-1]","      # self.out.put_c({'m': 'HoL', 'jid': t_justmovedHoL.jid, 'k': t_justmovedHoL.k, 'qid': self._id} )","      ","      serv_size = len(self.tinserv_l)","      r_l = [self.tinserv_l[i].remaining for i in range(serv_size) ]","      time = min(r_l)","      i_min = r_l.index(time)","      # sim_log(DEBUG, self.env, self, \"back to serv; time= {}, serv_size= {}\".format(time, serv_size), None)","      start_t = self.env.now","      ","      self.sinterrupt = self.env.event()","      yield (self.sinterrupt | self.env.timeout(time) )","      serv_t = (self.env.now - start_t)/serv_size","      for i in range(serv_size):","        try:","          self.t_l[i].remaining -= serv_t","        except IndexError:","          break","      ","      if self.add_to_serv:","        # sim_log(DEBUG, self.env, self, \"new task added to serv\", None)","        self.sinterrupt = None","        self.add_to_serv = False","      elif self.cancel:","        for t in self.t_l:","          if t.jid == self.cancel_jid:","            # sim_log(DEBUG, self.env, self, \"cancelled task in serv\", t)","            self.t_l.remove(t)","        self.sinterrupt = None","        self.cancel = False","      else:","        t = self.t_l.pop(i_min)","        # sim_log(DEBUG, self.env, self, \"serv done\", t)","        ","        lt = self.env.now - t.ent_time","        self.lt_l.append(lt)","        self.sl_l.append(lt/t.size)","        ","        t.prev_hop_id = self._id","        self.out.put(t)","  ","  def put_run(self):","    while True:","      t = (yield self.store.get() )","      _l = len(self.t_l)","      self.t_l.append(t)","      if _l == 0:","        self.got_busy.succeed()","      elif _l < self.h:","        self.add_to_serv = True","        self.sinterrupt.succeed()","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    t.ent_time = self.env.now","    return self.store.put(t) # .deep_copy()","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved; tinserv_l= {}\".format(self.tinserv_l), m)","    ","    # if m['m'] == 'cancel':","    jid = m['jid']","    if jid in [t.jid for t in self.tinserv_l]:","      self.cancel = True","      self.cancel_jid = jid","      self.sinterrupt.succeed()","    else:","      for t in self.t_l:","        if t.jid == jid:","          self.t_l.remove(t)","","class FCFS(object):","  def __init__(self, _id, env, slowdown_dist, out):","    self._id = _id","    self.env = env","    self.slowdown_dist = slowdown_dist","    self.out = out","    ","    self.t_l = []","    self.t_inserv = None","    self.got_busy = None","    self.cancel_flag = False","    self.cancel = None","    ","    self.lt_l = []","    self.sl_l = []","    ","    self.action = env.process(self.serv_run() )","  ","  def __repr__(self):","    return \"FCFS[_id= {}]\".format(self._id)","  ","  def length(self):","    return len(self.t_l) + (self.t_inserv is not None)","  ","  def serv_run(self):","    while True:","      if len(self.t_l) == 0:","        self.got_busy = self.env.event()","        yield (self.got_busy)","        self.got_busy = None","        # sim_log(DEBUG, self.env, self, \"got busy!\", None)","      self.t_inserv = self.t_l.pop(0)","      ","      self.cancel = self.env.event()","      clk_start_time = self.env.now","      st = self.t_inserv.size * self.slowdown_dist.gen_sample()","      # sim_log(DEBUG, self.env, self, \"starting {}s-clock on \".format(st), self.t_inserv)","      yield (self.cancel | self.env.timeout(st) )","      ","      if self.cancel_flag:","        # sim_log(DEBUG, self.env, self, \"cancelled clock on \", self.t_inserv)","        self.cancel_flag = False","      else:","        # sim_log(DEBUG, self.env, self, \"serv done in {}s on \".format(self.env.now-clk_start_time), self.t_inserv)","        lt = self.env.now - self.t_inserv.ent_time","        self.lt_l.append(lt)","        self.sl_l.append(lt/self.t_inserv.size)","      ","        self.t_inserv.prev_hop_id = self._id","        self.out.put(self.t_inserv)","      self.t_inserv = None","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    _l = len(self.t_l)","    t.ent_time = self.env.now","    self.t_l.append(t) # .deep_copy()","    if self.got_busy is not None and _l == 0:","      self.got_busy.succeed()","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved\", m)","    ","    # if m['m'] == 'cancel':","    jid = m['jid']","    for t in self.t_l:","      if t.jid == jid:","        self.t_l.remove(t)","    if jid == self.t_inserv.jid:","      self.cancel_flag = True","      self.cancel.succeed()","","class JQ(object):","  def __init__(self, env, in_qid_l):","    self.env = env","    self.in_qid_l = in_qid_l","    ","    self.jid__t_l_map = {}","    self.deped_jid_l = []","    ","    self.jid_HoLqid_l_map = {}","    self.movedHoL_jid_l = []","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    ","    # self.store_c = simpy.Store(env)","    # self.action = env.process(self.run_c() )","  ","  def __repr__(self):","    return \"JQ[in_qid_l= {}]\".format(self.in_qid_l)","  ","  def run(self):","    while True:","      t = (yield self.store.get() )","      if t.jid in self.deped_jid_l: # Redundant tasks of a job may be received","        continue","      ","      if t.jid not in self.jid__t_l_map:","        self.jid__t_l_map[t.jid] = []","      self.jid__t_l_map[t.jid].append(t.deep_copy() )","      ","      t_l = self.jid__t_l_map[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        self.jid__t_l_map.pop(t.jid, None)","        self.deped_jid_l.append(t.jid)","        self.out_c.put_c({'jid': t.jid, 'm': 'jdone', 'deped_from': [t.prev_hop_id for t in t_l] } )","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    return self.store.put(t)","  ","  # def run_c(self):","  #   while True:","  #     m = (yield self.store_c.get() )","  #     if m['m'] == 'HoL':","  #       jid, k, qid = m['jid'], m['k'], m['qid']","  #       if m['jid'] in self.movedHoL_jid_l: # Redundant tasks may move HoL simultaneously","  #         continue","        ","  #       if jid not in self.jid_HoLqid_l_map:","  #         self.jid_HoLqid_l_map[jid] = []","  #       self.jid_HoLqid_l_map[jid].append(qid)","        ","  #       HoLqid_l = self.jid_HoLqid_l_map[jid]","  #       if len(HoLqid_l) > k:","  #         log(ERROR, \"len(HoLqid_l)= {} > k= {}\".format(len(HoLqid_l), k) )","  #       elif len(HoLqid_l) < k:","  #         continue","  #       else:","  #         self.movedHoL_jid_l.append(jid)","  #         HoLqid_l = self.jid_HoLqid_l_map[jid]","  #         self.out_c.put_c({'m': 'jHoL', 'jid': jid, 'at': HoLqid_l} )","  #         self.jid_HoLqid_l_map.pop(jid, None)","  ","  # def put_c(self, m):","  #   sim_log(DEBUG, self.env, self, \"recved\", m)","  #   return self.store_c.put(m)","","class MultiQ(object):","  def __init__(self, env, N, sching_m):","    self.env = env","    self.N = N","    self.sching_m = sching_m","    ","    self.jq = JQ(env, range(self.N) )","    self.jq.out_c = self","    self.q_l = [PSQ(i, env, h=4, out=self.jq) for i in range(self.N) ]","    # slowdown_dist = Dolly() # DUniform(1, 1)","    # self.q_l = [FCFS(i, env, slowdown_dist, out=self.jq) for i in range(self.N) ]","    ","    self.jid_info_m = {}","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    ","    self.jtime_l = []","    self.k__jtime_m = {}","  ","  def __repr__(self):","    return \"MultiQ[N= {}]\".format(self.N)","  ","  def tlt_l(self):","    l = []","    for q in self.q_l:","      l.extend(q.lt_l)","    return l","  ","  def tsl_l(self):","    l = []","    for q in self.q_l:","      l.extend(q.sl_l)","    return l","  ","  def get_sorted_qids(self):","    qid_length_m = {q._id: q.length() for q in self.q_l}","    # print(\"qid_length_m= {}\".format(qid_length_m) )","    qid_length_l = sorted(qid_length_m.items(), key=operator.itemgetter(1) )","    # print(\"qid_length_l= {}\".format(qid_length_l) )","    return [qid_length[0] for qid_length in qid_length_l]","  ","  def run(self):","    while True:","      j = (yield self.store.get() )","      toi_l = random.sample(range(self.N), j.n)","      # toi_l = self.get_sorted_qids()[:j.n]","      ","      for i in toi_l:","        self.q_l[i].put(Task(j._id, j.k, j.tsize, j.tsize) )","      self.jid_info_m[j._id] = {'k': j.k, 'ent_time': self.env.now, 'tsize': j.tsize, 'qid_l': toi_l}","  ","  def put(self, j):","    # sim_log(DEBUG, self.env, self, \"recved\", j)","    if self.sching_m['t'] == 'coded':","      # j.n = j.k + self.sching_m['n-k']","      j.n = min(self.N, math.floor(j.k*self.sching_m['r'] ) )","    # return self.store.put(j.deep_copy() )","    return self.store.put(j)","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved\", m)","    # if m['m'] == 'jHoL':","    #   jid = m['jid']","    #   jinfo = self.jid_info_m[jid]","      ","    #   for i in jinfo['qid_l']:","    #     if i not in m['at']:","    #       self.q_l[i].put_c({'m': 'cancel', 'jid': jid} )","    # elif m['m'] == 'jdone':","    jid = m['jid']","    jinfo = self.jid_info_m[jid]","    t = (self.env.now - jinfo['ent_time'] )/jinfo['tsize']","    # t = self.env.now - jinfo['ent_time'] - jinfo['tsize']","    self.jtime_l.append(t)","    if jinfo['k'] not in self.k__jtime_m:","      self.k__jtime_m[jinfo['k'] ] = []","    self.k__jtime_m[jinfo['k'] ].append(t)","    ","    for i in jinfo['qid_l']:","      if i not in m['deped_from']:","        self.q_l[i].put_c({'m': 'cancel', 'jid': jid} )","    "]},{"action":"insertText","range":{"start":{"row":401,"column":0},"end":{"row":401,"column":34}},"text":"    self.jid_info_m.pop(jid, None)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":401,"column":0},"end":{"row":401,"column":34}},"text":"    self.jid_info_m.pop(jid, None)"},{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":401,"column":0}},"nl":"\n","lines":["import sys, pprint, math, numpy, simpy, getopt, itertools, operator","","from rvs import *","from arepeat_models import *","from arepeat_sim import *","","# ************************  Multiple Qs for Jobs with multiple Tasks  **************************** #","class Job(object):","  def __init__(self, _id, k, tsize, n=0):","    self._id = _id","    self.k = k","    self.tsize = tsize","    self.n = n","    self.prev_hop_id = None","  ","  def __repr__(self):","    return \"Job[id= {}, k= {}, n= {}]\".format(self._id, self.k, self.n)","  ","  def deep_copy(self):","    j = Job(self._id, self.k, self.tsize, self.n)","    j.prev_hop_id = self.prev_hop_id","    return j","","class JG(object): # Job Generator","  def __init__(self, env, ar, k_dist, tsize_dist):","    self.env = env","    self.ar = ar","    self.k_dist = k_dist","    self.tsize_dist = tsize_dist","    ","    self.nsent = 0","    self.out = None","    ","    self.action = None","  ","  def init(self):","    self.action = self.env.process(self.run() )","  ","  def run(self):","    while 1:","      yield self.env.timeout(random.expovariate(self.ar) )","      ","      self.nsent += 1","      k = self.k_dist.gen_sample()","      tsize = self.tsize_dist.gen_sample()","      self.out.put(Job(self.nsent, k, tsize) )","","class Task(object):","  def __init__(self, jid, k, size, remaining):","    self.jid = jid","    self.k = k","    self.size = size","    self.remaining = remaining","    ","    self.prev_hop_id = None","    self.ent_time = None","  ","  def __repr__(self):","    return \"Task[jid= {}, k= {}, size= {}, remaining= {}]\".format(self.jid, self.k, self.size, self.remaining)","  ","  def deep_copy(self):","    t = Task(self.jid, self.k, self.size, self.remaining)","    t.prev_hop_id = self.prev_hop_id","    t.ent_time = self.ent_time","    return t","","class PSQ(object): # Process Sharing Queue","  def __init__(self, _id, env, h, out):","    self._id = _id","    self.env = env","    self.h = h","    self.out = out","    ","    self.t_l = []","    self.tinserv_l = []","    self.got_busy = None","    self.sinterrupt = None","    self.add_to_serv = False","    self.cancel = False","    self.cancel_jid = None","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.serv_run() )","    self.action = env.process(self.put_run() )","    ","    self.lt_l = []","    self.sl_l = []","  ","  def __repr__(self):","    return \"PSQ[id= {}]\".format(self._id)","  ","  def length(self):","    return len(self.t_l)","  ","  def serv_run(self):","    while True:","      self.tinserv_l = self.t_l[:self.h]","      if len(self.tinserv_l) == 0:","        # sim_log(DEBUG, self.env, self, \"idle; waiting for arrival\", None)","        self.got_busy = self.env.event()","        yield (self.got_busy)","        # sim_log(DEBUG, self.env, self, \"got busy!\", None)","        continue","      # TODO: This seems wrong","      # t_justmovedHoL = self.tinserv_l[-1]","      # self.out.put_c({'m': 'HoL', 'jid': t_justmovedHoL.jid, 'k': t_justmovedHoL.k, 'qid': self._id} )","      ","      serv_size = len(self.tinserv_l)","      r_l = [self.tinserv_l[i].remaining for i in range(serv_size) ]","      time = min(r_l)","      i_min = r_l.index(time)","      # sim_log(DEBUG, self.env, self, \"back to serv; time= {}, serv_size= {}\".format(time, serv_size), None)","      start_t = self.env.now","      ","      self.sinterrupt = self.env.event()","      yield (self.sinterrupt | self.env.timeout(time) )","      serv_t = (self.env.now - start_t)/serv_size","      for i in range(serv_size):","        try:","          self.t_l[i].remaining -= serv_t","        except IndexError:","          break","      ","      if self.add_to_serv:","        # sim_log(DEBUG, self.env, self, \"new task added to serv\", None)","        self.sinterrupt = None","        self.add_to_serv = False","      elif self.cancel:","        for t in self.t_l:","          if t.jid == self.cancel_jid:","            # sim_log(DEBUG, self.env, self, \"cancelled task in serv\", t)","            self.t_l.remove(t)","        self.sinterrupt = None","        self.cancel = False","      else:","        t = self.t_l.pop(i_min)","        # sim_log(DEBUG, self.env, self, \"serv done\", t)","        ","        lt = self.env.now - t.ent_time","        self.lt_l.append(lt)","        self.sl_l.append(lt/t.size)","        ","        t.prev_hop_id = self._id","        self.out.put(t)","  ","  def put_run(self):","    while True:","      t = (yield self.store.get() )","      _l = len(self.t_l)","      self.t_l.append(t)","      if _l == 0:","        self.got_busy.succeed()","      elif _l < self.h:","        self.add_to_serv = True","        self.sinterrupt.succeed()","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    t.ent_time = self.env.now","    return self.store.put(t) # .deep_copy()","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved; tinserv_l= {}\".format(self.tinserv_l), m)","    ","    # if m['m'] == 'cancel':","    jid = m['jid']","    if jid in [t.jid for t in self.tinserv_l]:","      self.cancel = True","      self.cancel_jid = jid","      self.sinterrupt.succeed()","    else:","      for t in self.t_l:","        if t.jid == jid:","          self.t_l.remove(t)","","class FCFS(object):","  def __init__(self, _id, env, slowdown_dist, out):","    self._id = _id","    self.env = env","    self.slowdown_dist = slowdown_dist","    self.out = out","    ","    self.t_l = []","    self.t_inserv = None","    self.got_busy = None","    self.cancel_flag = False","    self.cancel = None","    ","    self.lt_l = []","    self.sl_l = []","    ","    self.action = env.process(self.serv_run() )","  ","  def __repr__(self):","    return \"FCFS[_id= {}]\".format(self._id)","  ","  def length(self):","    return len(self.t_l) + (self.t_inserv is not None)","  ","  def serv_run(self):","    while True:","      if len(self.t_l) == 0:","        self.got_busy = self.env.event()","        yield (self.got_busy)","        self.got_busy = None","        # sim_log(DEBUG, self.env, self, \"got busy!\", None)","      self.t_inserv = self.t_l.pop(0)","      ","      self.cancel = self.env.event()","      clk_start_time = self.env.now","      st = self.t_inserv.size * self.slowdown_dist.gen_sample()","      # sim_log(DEBUG, self.env, self, \"starting {}s-clock on \".format(st), self.t_inserv)","      yield (self.cancel | self.env.timeout(st) )","      ","      if self.cancel_flag:","        # sim_log(DEBUG, self.env, self, \"cancelled clock on \", self.t_inserv)","        self.cancel_flag = False","      else:","        # sim_log(DEBUG, self.env, self, \"serv done in {}s on \".format(self.env.now-clk_start_time), self.t_inserv)","        lt = self.env.now - self.t_inserv.ent_time","        self.lt_l.append(lt)","        self.sl_l.append(lt/self.t_inserv.size)","      ","        self.t_inserv.prev_hop_id = self._id","        self.out.put(self.t_inserv)","      self.t_inserv = None","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    _l = len(self.t_l)","    t.ent_time = self.env.now","    self.t_l.append(t) # .deep_copy()","    if self.got_busy is not None and _l == 0:","      self.got_busy.succeed()","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved\", m)","    ","    # if m['m'] == 'cancel':","    jid = m['jid']","    for t in self.t_l:","      if t.jid == jid:","        self.t_l.remove(t)","    if jid == self.t_inserv.jid:","      self.cancel_flag = True","      self.cancel.succeed()","","class JQ(object):","  def __init__(self, env, in_qid_l):","    self.env = env","    self.in_qid_l = in_qid_l","    ","    self.jid__t_l_map = {}","    self.deped_jid_l = []","    ","    self.jid_HoLqid_l_map = {}","    self.movedHoL_jid_l = []","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    ","    # self.store_c = simpy.Store(env)","    # self.action = env.process(self.run_c() )","  ","  def __repr__(self):","    return \"JQ[in_qid_l= {}]\".format(self.in_qid_l)","  ","  def run(self):","    while True:","      t = (yield self.store.get() )","      if t.jid in self.deped_jid_l: # Redundant tasks of a job may be received","        continue","      ","      if t.jid not in self.jid__t_l_map:","        self.jid__t_l_map[t.jid] = []","      self.jid__t_l_map[t.jid].append(t.deep_copy() )","      ","      t_l = self.jid__t_l_map[t.jid]","      if len(t_l) > t.k:","        log(ERROR, \"len(t_l)= {} > k= {}\".format(len(t_l), t.k) )","      elif len(t_l) < t.k:","        continue","      else:","        self.jid__t_l_map.pop(t.jid, None)","        self.deped_jid_l.append(t.jid)","        self.out_c.put_c({'jid': t.jid, 'm': 'jdone', 'deped_from': [t.prev_hop_id for t in t_l] } )","  ","  def put(self, t):","    # sim_log(DEBUG, self.env, self, \"recved\", t)","    return self.store.put(t)","  ","  # def run_c(self):","  #   while True:","  #     m = (yield self.store_c.get() )","  #     if m['m'] == 'HoL':","  #       jid, k, qid = m['jid'], m['k'], m['qid']","  #       if m['jid'] in self.movedHoL_jid_l: # Redundant tasks may move HoL simultaneously","  #         continue","        ","  #       if jid not in self.jid_HoLqid_l_map:","  #         self.jid_HoLqid_l_map[jid] = []","  #       self.jid_HoLqid_l_map[jid].append(qid)","        ","  #       HoLqid_l = self.jid_HoLqid_l_map[jid]","  #       if len(HoLqid_l) > k:","  #         log(ERROR, \"len(HoLqid_l)= {} > k= {}\".format(len(HoLqid_l), k) )","  #       elif len(HoLqid_l) < k:","  #         continue","  #       else:","  #         self.movedHoL_jid_l.append(jid)","  #         HoLqid_l = self.jid_HoLqid_l_map[jid]","  #         self.out_c.put_c({'m': 'jHoL', 'jid': jid, 'at': HoLqid_l} )","  #         self.jid_HoLqid_l_map.pop(jid, None)","  ","  # def put_c(self, m):","  #   sim_log(DEBUG, self.env, self, \"recved\", m)","  #   return self.store_c.put(m)","","class MultiQ(object):","  def __init__(self, env, N, sching_m):","    self.env = env","    self.N = N","    self.sching_m = sching_m","    ","    self.jq = JQ(env, range(self.N) )","    self.jq.out_c = self","    self.q_l = [PSQ(i, env, h=4, out=self.jq) for i in range(self.N) ]","    # slowdown_dist = Dolly() # DUniform(1, 1)","    # self.q_l = [FCFS(i, env, slowdown_dist, out=self.jq) for i in range(self.N) ]","    ","    self.jid_info_m = {}","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    ","    self.jtime_l = []","    self.k__jtime_m = {}","  ","  def __repr__(self):","    return \"MultiQ[N= {}]\".format(self.N)","  ","  def tlt_l(self):","    l = []","    for q in self.q_l:","      l.extend(q.lt_l)","    return l","  ","  def tsl_l(self):","    l = []","    for q in self.q_l:","      l.extend(q.sl_l)","    return l","  ","  def get_sorted_qids(self):","    qid_length_m = {q._id: q.length() for q in self.q_l}","    # print(\"qid_length_m= {}\".format(qid_length_m) )","    qid_length_l = sorted(qid_length_m.items(), key=operator.itemgetter(1) )","    # print(\"qid_length_l= {}\".format(qid_length_l) )","    return [qid_length[0] for qid_length in qid_length_l]","  ","  def run(self):","    while True:","      j = (yield self.store.get() )","      toi_l = random.sample(range(self.N), j.n)","      # toi_l = self.get_sorted_qids()[:j.n]","      ","      for i in toi_l:","        self.q_l[i].put(Task(j._id, j.k, j.tsize, j.tsize) )","      self.jid_info_m[j._id] = {'k': j.k, 'ent_time': self.env.now, 'tsize': j.tsize, 'qid_l': toi_l}","  ","  def put(self, j):","    # sim_log(DEBUG, self.env, self, \"recved\", j)","    if self.sching_m['t'] == 'coded':","      # j.n = j.k + self.sching_m['n-k']","      j.n = min(self.N, math.floor(j.k*self.sching_m['r'] ) )","    # return self.store.put(j.deep_copy() )","    return self.store.put(j)","  ","  def put_c(self, m):","    # sim_log(DEBUG, self.env, self, \"recved\", m)","    # if m['m'] == 'jHoL':","    #   jid = m['jid']","    #   jinfo = self.jid_info_m[jid]","      ","    #   for i in jinfo['qid_l']:","    #     if i not in m['at']:","    #       self.q_l[i].put_c({'m': 'cancel', 'jid': jid} )","    # elif m['m'] == 'jdone':","    jid = m['jid']","    jinfo = self.jid_info_m[jid]","    t = (self.env.now - jinfo['ent_time'] )/jinfo['tsize']","    # t = self.env.now - jinfo['ent_time'] - jinfo['tsize']","    self.jtime_l.append(t)","    if jinfo['k'] not in self.k__jtime_m:","      self.k__jtime_m[jinfo['k'] ] = []","    self.k__jtime_m[jinfo['k'] ].append(t)","    ","    for i in jinfo['qid_l']:","      if i not in m['deped_from']:","        self.q_l[i].put_c({'m': 'cancel', 'jid': jid} )","    "]}]}]],"redo":[]},"/tutorial.py":{"scrollTop":53,"scrollLeft":0,"selection":{"start":{"row":35,"column":2},"end":{"row":36,"column":16}},"lastUse":1515612836125,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":24},"end":{"row":142,"column":26}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":26},"end":{"row":142,"column":28}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":28},"end":{"row":142,"column":30}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":30},"end":{"row":142,"column":32}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":32},"end":{"row":142,"column":80}},"text":"feed_dict={input_ph: np.ones((1, input_size) ) }"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":80},"end":{"row":142,"column":81}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":51}},"text":"output"},{"action":"insertText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":46}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":46},"end":{"row":141,"column":47}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":47},"end":{"row":141,"column":48}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":48},"end":{"row":141,"column":49}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":85},"end":{"row":137,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":137,"column":0},"end":{"row":137,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":4},"end":{"row":137,"column":85}},"text":"hidden1_vs = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='hidden1')"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":144,"column":59},"end":{"row":145,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":145,"column":0},"end":{"row":145,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":4},"end":{"row":142,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":143,"column":4},"end":{"row":143,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":144,"column":4},"end":{"row":144,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":145,"column":63}},"text":"hidden1_gradient = sess.run(tf.gradients(loss, hidden1_vs),"},{"action":"insertText","range":{"start":{"row":145,"column":63},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":146,"column":0},"end":{"row":147,"column":0}},"lines":["                                feed_dict={input_ph: np.ones((1, input_size) ) } )"]},{"action":"insertText","range":{"start":{"row":147,"column":0},"end":{"row":147,"column":59}},"text":"    print(\"hidden1_gradient= {}\".format(hidden1_gradient) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":49}},"text":"loss"},{"action":"insertText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":46}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":46},"end":{"row":145,"column":47}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":47},"end":{"row":145,"column":48}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":48},"end":{"row":145,"column":49}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":49},"end":{"row":145,"column":50}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":50},"end":{"row":145,"column":51}},"text":"t"}]}]],"redo":[]},"/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":18,"column":2},"end":{"row":18,"column":2}},"lastUse":1515612169817,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":2},"end":{"row":12,"column":23}},"text":"tensorboard --logdir="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":0},"end":{"row":11,"column":23}},"text":"elif [ $1 = 't' ]; then"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":11,"column":14},"end":{"row":11,"column":15}},"text":"b"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":23},"end":{"row":12,"column":54}},"text":"/home/ubuntu/deep-scheduler/log"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":23},"end":{"row":10,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":17},"end":{"row":7,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":17}},"text":"rm -r __pycache__"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":6},"end":{"row":7,"column":17}},"text":"__pycache__"},{"action":"insertText","range":{"start":{"row":7,"column":6},"end":{"row":7,"column":7}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":7},"end":{"row":7,"column":8}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":8},"end":{"row":7,"column":9}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":9},"end":{"row":7,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":10},"end":{"row":7,"column":11}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":5},"end":{"row":7,"column":6}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":4},"end":{"row":7,"column":5}},"text":"r"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":3},"end":{"row":7,"column":4}},"text":"-"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":11,"column":0},"end":{"row":12,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":8}},"text":"rm log/*"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":23},"end":{"row":10,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":8}},"text":"rm log/*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":0},"end":{"row":10,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":24}},"text":"elif [ $1 = 'tb' ]; then"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":14},"end":{"row":14,"column":15}},"text":"b"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":13},"end":{"row":14,"column":14}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":13},"end":{"row":14,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":23},"end":{"row":15,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":21}},"text":"$PYTHON tutorial.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":10},"end":{"row":15,"column":18}},"text":"tutorial"},{"action":"insertText","range":{"start":{"row":15,"column":10},"end":{"row":15,"column":11}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":11},"end":{"row":15,"column":12}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":12},"end":{"row":15,"column":13}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":13},"end":{"row":15,"column":14}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":14},"end":{"row":15,"column":15}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":15},"end":{"row":15,"column":16}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":16},"end":{"row":15,"column":17}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":17},"end":{"row":15,"column":18}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":18},"end":{"row":15,"column":19}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":19},"end":{"row":15,"column":20}},"text":"g"}]}]],"redo":[]},"/scheduling.py":{"scrollTop":1144,"scrollLeft":0,"selection":{"start":{"row":118,"column":4},"end":{"row":118,"column":44}},"lastUse":1515597985045,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":50},"end":{"row":5,"column":51}},"text":"="}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":51},"end":{"row":5,"column":52}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":52},"end":{"row":5,"column":53}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":12,"column":2},"end":{"row":13,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":2}},"text":"  "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":2},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":2},"end":{"row":13,"column":21}},"text":"def __repr__(self):"},{"action":"insertText","range":{"start":{"row":13,"column":21},"end":{"row":14,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":39}},"text":"  return \"MultiQ[N= {}]\".format(self.N)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":2},"end":{"row":14,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":12},"end":{"row":14,"column":18}},"text":"MultiQ"},{"action":"insertText","range":{"start":{"row":14,"column":12},"end":{"row":14,"column":13}},"text":"D"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":13},"end":{"row":14,"column":14}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":14},"end":{"row":14,"column":15}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":15},"end":{"row":14,"column":16}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":16},"end":{"row":14,"column":17}},"text":"S"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":17},"end":{"row":14,"column":18}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":18},"end":{"row":14,"column":19}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":19},"end":{"row":14,"column":20}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":20},"end":{"row":14,"column":21}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":21},"end":{"row":14,"column":22}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":22},"end":{"row":14,"column":23}},"text":"l"},{"action":"insertText","range":{"start":{"row":14,"column":23},"end":{"row":14,"column":24}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":24},"end":{"row":14,"column":25}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":24},"end":{"row":14,"column":25}},"text":"r"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":23},"end":{"row":14,"column":24}},"text":"e"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":22},"end":{"row":14,"column":23}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":21},"end":{"row":14,"column":22}},"text":"u"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":20},"end":{"row":14,"column":21}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":20},"end":{"row":14,"column":21}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":93,"column":20},"end":{"row":93,"column":21}},"text":"l"},{"action":"removeText","range":{"start":{"row":4,"column":16},"end":{"row":4,"column":17}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":93,"column":19},"end":{"row":93,"column":20}},"text":"u"},{"action":"removeText","range":{"start":{"row":4,"column":15},"end":{"row":4,"column":16}},"text":"u"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":93,"column":18},"end":{"row":93,"column":19}},"text":"d"},{"action":"removeText","range":{"start":{"row":4,"column":14},"end":{"row":4,"column":15}},"text":"d"},{"action":"removeText","range":{"start":{"row":93,"column":17},"end":{"row":93,"column":18}},"text":"e"},{"action":"removeText","range":{"start":{"row":4,"column":13},"end":{"row":4,"column":14}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":22},"end":{"row":14,"column":23}},"text":"N"},{"action":"insertText","range":{"start":{"row":14,"column":22},"end":{"row":14,"column":23}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":23},"end":{"row":14,"column":24}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":24},"end":{"row":14,"column":25}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":25},"end":{"row":14,"column":26}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":26},"end":{"row":14,"column":27}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":27},"end":{"row":14,"column":28}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":28},"end":{"row":14,"column":29}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":29},"end":{"row":14,"column":30}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":30},"end":{"row":14,"column":31}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":35},"end":{"row":14,"column":36}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":36},"end":{"row":14,"column":37}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":37},"end":{"row":14,"column":38}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":38},"end":{"row":14,"column":39}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":39},"end":{"row":14,"column":40}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":40},"end":{"row":14,"column":41}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":41},"end":{"row":14,"column":42}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":42},"end":{"row":14,"column":43}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":43},"end":{"row":14,"column":44}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":44},"end":{"row":14,"column":45}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":45},"end":{"row":14,"column":46}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":46},"end":{"row":14,"column":47}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":47},"end":{"row":14,"column":48}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":48},"end":{"row":14,"column":49}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":49},"end":{"row":14,"column":50}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":50},"end":{"row":14,"column":51}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":51},"end":{"row":14,"column":52}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":52},"end":{"row":14,"column":53}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":53},"end":{"row":14,"column":54}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":54},"end":{"row":14,"column":55}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":54},"end":{"row":14,"column":55}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":53},"end":{"row":14,"column":54}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":52},"end":{"row":14,"column":53}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":52},"end":{"row":14,"column":53}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":53},"end":{"row":14,"column":54}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":54},"end":{"row":14,"column":55}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":55},"end":{"row":14,"column":56}},"text":"-"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":55},"end":{"row":14,"column":56}},"text":"-"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":55},"end":{"row":14,"column":56}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":56},"end":{"row":14,"column":57}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":57},"end":{"row":14,"column":58}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":58},"end":{"row":14,"column":59}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":58},"end":{"row":14,"column":59}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":57},"end":{"row":14,"column":58}},"text":"e"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":56},"end":{"row":14,"column":57}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":55},"end":{"row":14,"column":56}},"text":"_"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":54},"end":{"row":14,"column":55}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":53},"end":{"row":14,"column":54}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":52},"end":{"row":14,"column":53}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":51},"end":{"row":14,"column":52}},"text":","}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":66},"end":{"row":14,"column":67}},"text":"N"},{"action":"insertText","range":{"start":{"row":14,"column":66},"end":{"row":14,"column":67}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":67},"end":{"row":14,"column":68}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":68},"end":{"row":14,"column":69}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":69},"end":{"row":14,"column":70}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":70},"end":{"row":14,"column":71}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":71},"end":{"row":14,"column":72}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":72},"end":{"row":14,"column":73}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":73},"end":{"row":14,"column":74}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":74},"end":{"row":14,"column":75}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":75},"end":{"row":14,"column":76}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":76},"end":{"row":14,"column":77}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":77},"end":{"row":14,"column":78}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":78},"end":{"row":14,"column":79}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":79},"end":{"row":14,"column":80}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":80},"end":{"row":14,"column":81}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":81},"end":{"row":14,"column":82}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":82},"end":{"row":14,"column":92}},"text":"action_len"}]}]],"redo":[]}},"window":{"width":1920,"height":999,"top":0,"left":0,"isMaximized":true}}