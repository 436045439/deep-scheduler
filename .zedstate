{"split":"2-0","session.current":["/exp.py","/scheduling.py"],"session.open":{"/scheduling.py":{"scrollTop":327,"scrollLeft":0,"selection":{"start":{"row":40,"column":9},"end":{"row":40,"column":21}},"lastUse":1515814649676,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":10},"end":{"row":38,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":14},"end":{"row":38,"column":18}},"text":"slim"},{"action":"insertText","range":{"start":{"row":38,"column":14},"end":{"row":38,"column":37}},"text":"tensorflow.contrib.slim"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":23},"end":{"row":38,"column":24}},"text":"w"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":22},"end":{"row":38,"column":23}},"text":"o"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":21},"end":{"row":38,"column":22}},"text":"l"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":20},"end":{"row":38,"column":21}},"text":"f"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":19},"end":{"row":38,"column":20}},"text":"r"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":18},"end":{"row":38,"column":19}},"text":"o"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":17},"end":{"row":38,"column":18}},"text":"s"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":16},"end":{"row":38,"column":17}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":60},"end":{"row":38,"column":61}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":58},"end":{"row":38,"column":59}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":57},"end":{"row":38,"column":58}},"text":"i"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":56},"end":{"row":38,"column":57}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":56},"end":{"row":38,"column":57}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":57},"end":{"row":38,"column":58}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":58},"end":{"row":38,"column":59}},"text":"h"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":68},"end":{"row":38,"column":69}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":61},"end":{"row":38,"column":67}},"text":"h_size"},{"action":"insertText","range":{"start":{"row":38,"column":61},"end":{"row":38,"column":62}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":62},"end":{"row":38,"column":63}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":63},"end":{"row":38,"column":64}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":64},"end":{"row":38,"column":65}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":65},"end":{"row":38,"column":66}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":66},"end":{"row":38,"column":67}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":67},"end":{"row":38,"column":68}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":68},"end":{"row":38,"column":69}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":69},"end":{"row":38,"column":70}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":70},"end":{"row":38,"column":71}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":71},"end":{"row":38,"column":72}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":98},"end":{"row":38,"column":99}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":74},"end":{"row":38,"column":98}},"text":"biases_initializer=None,"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":73},"end":{"row":38,"column":74}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":99},"end":{"row":39,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":39,"column":0},"end":{"row":39,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":4},"end":{"row":39,"column":99}},"text":"hidden1 = tf.contrib.slim.fully_connected(self.state_ph, self.nn_len, activation_fn=tf.nn.relu)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":39,"column":10},"end":{"row":39,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":10},"end":{"row":39,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":39,"column":46},"end":{"row":39,"column":59}},"text":"self.state_ph"},{"action":"insertText","range":{"start":{"row":39,"column":46},"end":{"row":39,"column":47}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":47},"end":{"row":39,"column":48}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":48},"end":{"row":39,"column":49}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":49},"end":{"row":39,"column":50}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":50},"end":{"row":39,"column":51}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":51},"end":{"row":39,"column":52}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":52},"end":{"row":39,"column":53}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":4},"end":{"row":40,"column":105}},"text":"self.output = slim.fully_connected(hidden,a_size,activation_fn=tf.nn.softmax,biases_initializer=None)"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":9},"end":{"row":40,"column":15}},"text":"output"},{"action":"insertText","range":{"start":{"row":40,"column":9},"end":{"row":40,"column":21}},"text":"action_probs"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":35}},"text":"tf.contrib."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":62},"end":{"row":40,"column":63}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":64},"end":{"row":40,"column":65}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":65},"end":{"row":40,"column":71}},"text":"a_size"},{"action":"insertText","range":{"start":{"row":40,"column":65},"end":{"row":40,"column":66}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":66},"end":{"row":40,"column":67}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":67},"end":{"row":40,"column":68}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":68},"end":{"row":40,"column":69}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":69},"end":{"row":40,"column":70}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":70},"end":{"row":40,"column":71}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":71},"end":{"row":40,"column":72}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":72},"end":{"row":40,"column":73}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":73},"end":{"row":40,"column":74}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":74},"end":{"row":40,"column":75}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":70},"end":{"row":40,"column":75}},"text":"a_len"},{"action":"insertText","range":{"start":{"row":40,"column":70},"end":{"row":40,"column":80}},"text":"action_len"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":81},"end":{"row":40,"column":82}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":109},"end":{"row":40,"column":133}},"text":",biases_initializer=None"}]}]],"redo":[]},"/exp.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":20,"column":22},"end":{"row":20,"column":22}},"lastUse":1515814649598,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":2},"end":{"row":40,"column":6}},"text":"l = "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":23},"end":{"row":40,"column":24}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":25}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":25}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":25},"end":{"row":40,"column":26}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":26},"end":{"row":40,"column":27}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":27},"end":{"row":40,"column":28}},"text":"z"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":28},"end":{"row":40,"column":29}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":29},"end":{"row":40,"column":30}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":30},"end":{"row":40,"column":36}},"text":"(N, T)"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":36},"end":{"row":40,"column":37}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":25},"end":{"row":40,"column":26}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":26},"end":{"row":40,"column":27}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":25}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":27}},"text":"N*T"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":26},"end":{"row":40,"column":27}},"text":"T"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":25},"end":{"row":40,"column":26}},"text":"*"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":25}},"text":"N"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":24},"end":{"row":40,"column":25}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":25},"end":{"row":40,"column":26}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":26},"end":{"row":40,"column":27}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":27},"end":{"row":40,"column":28}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":28},"end":{"row":40,"column":29}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":7,"column":0},"end":{"row":28,"column":0}},"nl":"\n","lines":["  '''","  row_indices = tf.constant([1, 1, 2])","  col_indices = tf.constant([0, 2, 3])","  x = tf.zeros((3, 4))","  ","  # get list of ((row1, col1), (row2, col2), ..)","  coords = tf.transpose(tf.pack([row_indices, col_indices]))","  ","  # get tensor with 1's at positions (row1, col1),...","  binary_mask = tf.sparse_to_dense(coords, x.get_shape(), 1)","  ","  # convert 1/0 to True/False","  binary_mask = tf.cast(binary_mask, tf.bool)","  ","  twos = 2*tf.ones(x.get_shape())","  ","  # make new x out of old values or 2, depending on mask ","  x = tf.select(binary_mask, twos, x)","  ","  print x.eval()","  '''"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":32},"end":{"row":7,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":7,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":32}},"text":"  sess = tf.InteractiveSession()"},{"action":"removeText","range":{"start":{"row":5,"column":2},"end":{"row":5,"column":26}},"text":"tf.reset_default_graph()"},{"action":"removeText","range":{"start":{"row":5,"column":2},"end":{"row":6,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":5,"column":0},"end":{"row":6,"column":0}},"nl":"\n","lines":["  "]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":4,"column":0},"end":{"row":4,"column":24}},"text":"tf.reset_default_graph()"},{"action":"insertText","range":{"start":{"row":4,"column":24},"end":{"row":5,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":30}},"text":"sess = tf.InteractiveSession()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":5,"column":30},"end":{"row":6,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":7},"end":{"row":27,"column":18}},"text":"tf.reshape("}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":58},"end":{"row":27,"column":59}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":59},"end":{"row":27,"column":60}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":58},"end":{"row":27,"column":59}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":59},"end":{"row":27,"column":60}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":60},"end":{"row":27,"column":61}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":61},"end":{"row":27,"column":62}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":61},"end":{"row":27,"column":65}},"text":"N, T"}]}]],"redo":[]},"/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":19,"column":16},"end":{"row":19,"column":16}},"lastUse":1515795816321,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":0},"end":{"row":14,"column":24}},"text":"elif [ $1 = 'tb' ]; then"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":14},"end":{"row":14,"column":15}},"text":"b"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":14,"column":13},"end":{"row":14,"column":14}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":13},"end":{"row":14,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":14,"column":23},"end":{"row":15,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":21}},"text":"$PYTHON tutorial.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":10},"end":{"row":15,"column":18}},"text":"tutorial"},{"action":"insertText","range":{"start":{"row":15,"column":10},"end":{"row":15,"column":11}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":11},"end":{"row":15,"column":12}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":12},"end":{"row":15,"column":13}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":13},"end":{"row":15,"column":14}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":14},"end":{"row":15,"column":15}},"text":"d"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":15},"end":{"row":15,"column":16}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":16},"end":{"row":15,"column":17}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":17},"end":{"row":15,"column":18}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":18},"end":{"row":15,"column":19}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":19},"end":{"row":15,"column":20}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":23},"end":{"row":16,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":0},"end":{"row":16,"column":23}},"text":"elif [ $1 = 's' ]; then"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":23},"end":{"row":17,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":13},"end":{"row":16,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":13},"end":{"row":16,"column":14}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":2},"end":{"row":17,"column":23}},"text":"$PYTHON scheduling.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":10},"end":{"row":17,"column":20}},"text":"scheduling"},{"action":"insertText","range":{"start":{"row":17,"column":10},"end":{"row":17,"column":11}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":11},"end":{"row":17,"column":12}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":12},"end":{"row":17,"column":13}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":13},"end":{"row":17,"column":14}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":14},"end":{"row":17,"column":15}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":15},"end":{"row":17,"column":16}},"text":"q"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":16},"end":{"row":17,"column":17}},"text":"_"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":17},"end":{"row":17,"column":18}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":18},"end":{"row":17,"column":19}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":19},"end":{"row":17,"column":20}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":23},"end":{"row":18,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":23}},"text":"elif [ $1 = 'm' ]; then"},{"action":"insertText","range":{"start":{"row":18,"column":23},"end":{"row":19,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":21}},"text":"$PYTHON multiq_sim.py"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":13},"end":{"row":18,"column":14}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":13},"end":{"row":18,"column":14}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":19,"column":10},"end":{"row":19,"column":20}},"text":"multiq_sim"},{"action":"insertText","range":{"start":{"row":19,"column":10},"end":{"row":19,"column":11}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":11},"end":{"row":19,"column":12}},"text":"x"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":19,"column":12},"end":{"row":19,"column":13}},"text":"p"}]}]],"redo":[]},"/multiq_sim.py":{"scrollTop":4412,"scrollLeft":0,"selection":{"start":{"row":282,"column":2},"end":{"row":282,"column":2}},"lastUse":1515793465584,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":3},"end":{"row":398,"column":4}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":4},"end":{"row":398,"column":5}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":5},"end":{"row":398,"column":6}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":6},"end":{"row":398,"column":7}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":7},"end":{"row":398,"column":8}},"text":"0"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":398,"column":8},"end":{"row":398,"column":9}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":398,"column":8},"end":{"row":398,"column":9}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":399,"column":9},"end":{"row":399,"column":10}},"text":"0"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":368,"column":18},"end":{"row":369,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":369,"column":0},"end":{"row":369,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":4},"end":{"row":370,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":370,"column":0},"end":{"row":370,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":370,"column":4},"end":{"row":371,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":371,"column":0},"end":{"row":371,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":4},"end":{"row":369,"column":51}},"text":"np.mean(np.random.randint(10, size=state_len) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":372,"column":8},"end":{"row":372,"column":49}},"text":"np.array([q.length() for q in self.q_l] )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":369,"column":12},"end":{"row":369,"column":49}},"text":"np.random.randint(10, size=state_len)"},{"action":"insertText","range":{"start":{"row":369,"column":12},"end":{"row":369,"column":53}},"text":"np.array([q.length() for q in self.q_l] )"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":370,"column":0},"end":{"row":371,"column":0}},"nl":"\n","lines":["    "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":370,"column":0},"end":{"row":371,"column":0}},"nl":"\n","lines":["    "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":370,"column":0},"end":{"row":371,"column":0}},"nl":"\n","lines":["    s = "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":370,"column":0},"end":{"row":371,"column":0}},"nl":"\n","lines":["    sum_s = sum(s)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":370,"column":0},"end":{"row":371,"column":0}},"nl":"\n","lines":["    return s/sum_s if sum_s != 0 else s"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":4},"end":{"row":369,"column":5}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":5},"end":{"row":369,"column":6}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":6},"end":{"row":369,"column":7}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":7},"end":{"row":369,"column":8}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":8},"end":{"row":369,"column":9}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":9},"end":{"row":369,"column":10}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":369,"column":10},"end":{"row":369,"column":11}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":286,"column":18},"end":{"row":287,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":287,"column":0},"end":{"row":287,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":4},"end":{"row":287,"column":5}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":5},"end":{"row":287,"column":6}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":6},"end":{"row":287,"column":7}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":7},"end":{"row":287,"column":8}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":8},"end":{"row":287,"column":9}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":9},"end":{"row":287,"column":10}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":10},"end":{"row":287,"column":11}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":11},"end":{"row":287,"column":19}},"text":"np.mean("}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":288,"column":8},"end":{"row":288,"column":49}},"text":"np.array([q.length() for q in self.q_l] )"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":19},"end":{"row":287,"column":60}},"text":"np.array([q.length() for q in self.q_l] )"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":60},"end":{"row":287,"column":61}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":287,"column":61},"end":{"row":287,"column":62}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":288,"column":0},"end":{"row":289,"column":0}},"nl":"\n","lines":["    s = "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":288,"column":0},"end":{"row":289,"column":0}},"nl":"\n","lines":["    sum_s = sum(s)"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":288,"column":0},"end":{"row":289,"column":0}},"nl":"\n","lines":["    return s/sum_s if sum_s != 0 else s"]}]}]],"redo":[]},"/patch.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":18,"column":15},"end":{"row":18,"column":15}},"lastUse":1515707215883,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":46}},"text":"import inspect, math, mpmath, scipy, itertools"},{"action":"insertText","range":{"start":{"row":0,"column":46},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":192,"column":0}},"lines":["from scipy import special","","# dark_color = itertools.cycle(('green', 'red', 'blue', 'turquoise', 'goldenrod', 'purple', 'gray', 'brown', 'magenta', 'gold', 'olive', 'orangered', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray'))","dark_color = itertools.cycle(('green', 'red', 'blue', 'goldenrod', 'magenta', 'purple', 'gray', 'brown', 'turquoise', 'gold', 'olive', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray', 'orangered'))","light_color = itertools.cycle(('silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'turquoise'))","linestyle = itertools.cycle(('-', '--', '-.', ':') )","marker = itertools.cycle(('^', 'p', 'd', '+', 'v', '<', '>', '1' , '2', '3', '4', 'x') )","skinny_marker_l = ['x', '+', '1', '2', '3', '4']","","mew, ms = 3, 5","","INFO = 0","DEBUG = 1","WARNING = 2","ERROR = 3","","# DEBUG_LEVEL = INFO","DEBUG_LEVEL = WARNING","# DEBUG_LEVEL = ERROR","","debug_level__string_map = {INFO: \"INFO\", DEBUG: \"DEBUG\", WARNING: \"WARNING\", ERROR: \"ERROR\"}","","\"\"\"","*log: To have a unified logging which can be refactored easily","\"\"\"","def sim_log(dlevel, env, caller, action, affected):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  env= simpy.Environment","  caller= string -- name of the sim component acting","  action= string","  affected= any -- whatever component being acted on/with e.g., packet","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{} t: {:.2f}] {} {}\\n\\t{}\".format(debug_level__string_map[dlevel], env.now, caller, action, affected) )","","def log(dlevel, log):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  log= string to be logged","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{}] {}:: {}\".format(debug_level__string_map[dlevel], inspect.stack()[1][3], log) )","","def list_to_str(l):","  return \",\".join(\"%s\" % e for e in l)","","def H_cont(n):","  return mpmath.quad(lambda x: (1-x**n)/(1-x), [0, 1] )","","def H(n):","  if n == 0:","    return 0","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/i)","  return sum_","","def H_2(n):","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/(i**2) )","  return sum_","","def gen_H(n, k):","  sum_ = 0","  for i in range(1, n+1):","    if (i - k) == 0:","      continue","    sum_ += float(1/(i*(i - k) ) )","  return sum_","","def binomial(n, k):","  if n == k:","    return 1","  elif k == 1:","    return n","  elif k == 0:","    return 1","  elif k > n:","    return 0","  else:","    return math.factorial(n)/math.factorial(k)/math.factorial(n-k)","","# def binomial(x, y):","#   try:","#     binom = factorial(x) // factorial(y) // factorial(x - y)","#   except ValueError:","#     binom = 0","#   return binom","","def I(u_l, m, n):","  den = B(m, n)","  if den == 0:","    return None","  return B(m, n, u_l=u_l)/den","  # return scipy.special.betainc(m, n, u_l)","","def B(m, n, u_l=1):","  # if u_l == 1:","  #   return scipy.special.beta(m, n)","  return mpmath.quad(lambda x: x**(m-1) * (1-x)**(n-1), [0, u_l] )","  # else:","  #   return I(u_l, m, n)*B(m, n)","","def G(z):","  return scipy.special.gamma(z)","  # return mpmath.quad(lambda x: x**(z-1) * math.exp(-z), [0, mpmath.inf] )","","# Order stats","def cdf_n_k(n, k, X, x): # Pr{X_n:k < x}","  cdf = 0","  for i in range(k, n+1):","    cdf += binomial(n, i) * X.cdf(x)**i * X.tail(x)**(n-i)","  return cdf","","def moment_i_n_k(i, n, k, X): # E[X_n:k]","  return mpmath.quad(lambda x: i*x**(i-1) * (1 - cdf_n_k(n, k, X, x) ), [0, mpmath.inf] )","","# Qing","def PK(E_V, E_V_2, ar):","  if ar*E_V >= 1:","    return None","  E_T = E_V + ar*E_V_2/2/(1 - ar*E_V)","  if E_T > 100: return None","  return E_T","","def fit_pareto(s_l):","  n = len(s_l)","  ","  fit_upper_tail = False # True","  if not fit_upper_tail:","    l = s_l[-1]","    D = 0","    for s in s_l:","      D += math.log(s) - math.log(l)","    a = (n-1)/D","  elif fit_upper_tail:","    l = s_l[-1]","    i = int(math.sqrt(n) ) # int(n*0.3)","    s_l = s_l[:i]","    l_ = s_l[-1]","    D = 0","    for s in s_l:","      D += math.log(s) - math.log(l_)","    a = i/D","  # log(WARNING, \"done; l= {}, a= {}\".format(l, a) )","  return l, a","","def fit_tpareto(s_l):","  # s_l is ordered in descending order","  n = len(s_l)","  log(WARNING, \"n= {}\".format(n) )","  fit_upper_tail = False # True","  def solve_a(eq):","    a = 0.01","    _a = None","    while True:","      if eq(a) > 0:","        _a = a","        a += 0.01","      else:","        return _a if _a is not None else 0.01","  ","  u = s_l[0]","  if not fit_upper_tail:","    l = s_l[-1]","    r = l/u","    # Did not work somehow","    # a = sympy.Symbol('a')","    # a = sympy.solve(n/a + n*r**a*math.log(r)/(1-r**a) - sum([math.log(x/l) for x in s_l] ) )","    a = solve_a(lambda a: n/a + n*r**a*math.log(r)/(1-r**a) - sum([math.log(x/l) for x in s_l] ) )","  else:","    i = int(math.sqrt(n) ) # int(n*0.3)","    X_ip1 = s_l[i+1]","    r = X_ip1/u","    a = solve_a(lambda a: i/a + i*r**a*math.log(r)/(1-r**a) - sum([math.log(x) - math.log(X_ip1) for x in s_l[:i+1] ] ) )","    l = i**(1/a) * X_ip1*(n - (n-i)*(X_ip1/u)**a)**(-1/a)","  log(WARNING, \"done; l= {}, u= {}, a= {}\".format(l, u, a) )","  return l, u, a","","def fit_sexp(s_l):","  # https://www.statlect.com/fundamentals-of-statistics/exponential-distribution-maximum-likelihood","  D = min(s_l)","  n = len(s_l)","  mu = n/(sum(s_l) - n*D)","  "]},{"action":"insertText","range":{"start":{"row":192,"column":0},"end":{"row":192,"column":14}},"text":"  return D, mu"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}]],"redo":[]},"/rvs.py":{"scrollTop":5093,"scrollLeft":0,"selection":{"start":{"row":356,"column":24},"end":{"row":356,"column":24}},"lastUse":1515706851197,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":17}},"text":"import matplotlib"},{"action":"insertText","range":{"start":{"row":0,"column":17},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":356,"column":0}},"lines":["matplotlib.rcParams['pdf.fonttype'] = 42","matplotlib.rcParams['ps.fonttype'] = 42","","matplotlib.use('Agg')","import matplotlib.pyplot as plot","","import math, random, numpy, csv","from scipy.stats import *","from patch import *","","class RV(): # Random Variable","  def __init__(self, l_l, u_l):","    self.l_l = l_l","    self.u_l = u_l","","class Exp(RV):","  def __init__(self, mu, D=0):","    RV.__init__(self, l_l=D, u_l=float(\"inf\") )","    self.D = D","    self.mu = mu","  ","  def __str__(self):","    return \"Exp(D={}, mu={})\".format(self.D, self.mu)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return math.exp(-self.mu*(x - self.D) )","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - math.exp(-self.mu*(x - self.D) )","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.mu*math.exp(-self.mu*(x - self.D) )","  ","  def mean(self):","    return self.D + 1/self.mu","  ","  def var(self):","    return 1/self.mu**2","  ","  def gen_sample(self):","    return self.D + random.expovariate(self.mu)","","class Pareto(RV):","  def __init__(self, loc, a):","    RV.__init__(self, l_l=loc, u_l=float(\"inf\") )","    self.loc = loc","    self.a = a","  ","  def __str__(self):","    return \"Pareto(loc= {}, a= {})\".format(self.loc, self.a)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return (self.loc/x)**self.a","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - (self.loc/x)**self.a","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.a*self.loc**self.a / x**(self.a+1)","  ","  def dpdf_dx(self, x):","    if x <= self.l_l:","      return 0","    return sympy.mpmath.diff(lambda y: self.a*self.loc**self.a / y**(self.a+1), x)","  ","  def mean(self):","    if self.a <= 1:","      log(WARNING, \"Mean is Infinity; a= {} <= 1\".format(self.a) )","      return float(\"inf\")","    else:","      return self.loc*self.a/(self.a-1)","  ","  def var(self):","    if self.a <= 2:","      log(WARNING, \"Variance is Infinity; a= {} <= 2\".format(self.a) )","      return float(\"inf\")","    else:","      return self.a*self.loc**2 / (self.a-1)**2/(self.a-2)","  ","  def gen_sample(self):","    return ((numpy.random.pareto(self.a, 1) + 1)*self.loc)[0]","    # return pareto.ppf(numpy.random.uniform(0, 1), b=self.a, scale=self.loc)","","class TPareto(): # Truncated","  def __init__(self, l, u, a):","    RV.__init__(self, l_l=l, u_l=u)","    self.l = l","    self.u = u","    self.a = a","  ","  def __str__(self):","    return \"Pareto(l= {}, u= {}, a= {})\".format(self.l, self.u, self.a)","  ","  def cdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 1","    else:","      return (1 - (self.l/x)**self.a)/(1 - (self.l/self.u)**self.a)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def moment(self, k):","    if k == self.a:","      return math.log(self.u_l/self.l)","    else:","      return self.a*self.l**k/(self.a-k) * \\","             (1 - (self.l/self.u)**(self.a-k))/(1 - (self.l/self.u)**self.a)","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    return self.l*(1 - u*(1-(self.l/self.u)**self.a) )**(-1/self.a)","","def plot_gensample_check():","  l, u, a = 1, 10**5, 2","  rv = TPareto(l, u, a)","  ","  x_l = []","  for i in range(10**5):","    x_l.append(rv.gen_sample() )","  x_l = numpy.sort(x_l)","  x_l = x_l[::-1]","  # i_ = None","  # for i in range(len(x_l)-1, 0, -1):","  #   if x_l[i] > 1.01: i_ = i; break","  # x_l = x_l[:i_]","  y_l = numpy.arange(x_l.size)/x_l.size","  plot.plot(x_l, y_l, marker=next(marker), color=next(dark_color), linestyle=':', mew=mew, ms=ms)","  ","  y_l = []","  for x in x_l:","    y_l.append(rv.tail(x) )","  plot.plot(x_l, y_l, label=r'$Pareto(l= %.2f, u= %.2f, \\alpha= %.2f)$' % (l, u, a), color=next(dark_color), linestyle='-')","  plot.legend()","  plot.xscale('log')","  plot.yscale('log')","  plot.xlabel(r'$x$', fontsize=13)","  plot.ylabel(r'$p(X > x)$', fontsize=13)","  plot.title(r'$X \\sim$ {}'.format(rv) )","  plot.savefig(\"plot_gensample_check.png\")","  plot.gcf().clear()","","class Google(RV):","  def __init__(self, k):","    RV.__init__(self, l_l=0, u_l=float(\"inf\") )","    ","    self.k = k","    self.sample_l = []","    # with open(\"filtered_task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","    with open(\"task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","      reader = csv.reader(f)","      for line in reader:","        self.sample_l.append(float(line[0] ) )","    self.sample_l.sort()","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"Google(k= \".format(self.k)","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class SimRV(RV):","  def __init__(self, sample_l):","    RV.__init__(self, l_l=min(sample_l), u_l=max(sample_l) )","    ","    self.sample_l = sample_l","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"SimRV\"","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class Dolly(RV):","  # Kristen et al. A Better Model for Job Redundancy: Decoupling Server Slowdown and Job Size","  def __init__(self):","    RV.__init__(self, l_l=1, u_l=12)","  ","  def __str__(self):","    return \"Dolly\"","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    if u <= 0.23: return 1 + u/100","    u -= 0.23","    if u <= 0.14: return 2 + u/100","    u -= 0.14","    if u <= 0.09: return 3 + u/100","    u -= 0.09","    if u <= 0.03: return 4 + u/100","    u -= 0.03","    if u <= 0.08: return 5 + u/100","    u -= 0.08","    if u <= 0.1: return 6 + u/100","    u -= 0.1","    if u <= 0.04: return 7 + u/100","    u -= 0.04","    if u <= 0.14: return 8 + u/100","    u -= 0.14","    if u <= 0.12: return 9 + u/100","    u -= 0.12","    if u <= 0.021: return 10 + u/100","    u -= 0.021","    if u <= 0.007: return 11 + u/100","    u -= 0.007","    if u <= 0.002: return 12 + u/100","    return 12 + u/100 # for safety","","class Bern(RV):","  def __init__(self, L, U, p):","    RV.__init__(self, l_l=L, u_l=U)","    ","    self.p = p","  ","  def __str__(self):","    return \"Bern(l= {}, u= {}, p= {})\".format(self.l_l, self.u_l, self.p)","  ","  def mean(self):","    return (1 - self.p)*self.l_l + self.p*self.u_l","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    return self.u_l + u/100 if u <= self.p else self.l_l + u/100","","# class BernPareto(RV):","#   def __init__(self, U, L, p, loc, a):","#     RV.__init__(self, l_l=U*loc, u_l=float(\"Inf\") )","    ","#     self.bern = Bern(U, L, p)","#     self.pareto = Pareto(loc, a)","  ","#   def __str__(self):","#     return \"Bern*Pareto\"","  ","#   def mean(self):","#     return self.bern.mean()*self.pareto.mean()","  ","#   def gen_sample(self):","#     return self.bern.gen_sample()*self.pareto.gen_sample()","","class DUniform(): # Discrete","  def __init__(self, lb, ub):","    RV.__init__(self, l_l=lb, u_l=ub)","  ","  def __str__(self):","    return \"DUniform[{}, {}]\".format(self.l_l, self.u_l)","  ","  def mean(self):","    return (self.u_l + self.l_l)/2","  ","  def pdf(self, x):","    return float(1/(self.u_l - self.l_l + 1) )","  ","  def gen_sample(self):","    return random.randint(self.l_l, self.u_l)","","class BoundedZipf():","  def __init__(self, lb, ub, a=1):","    RV.__init__(self, l_l=lb, u_l=ub)","    self.a = a","    ","    self.v = numpy.arange(self.l_l, self.u_l+1) # values","    w_l = [float(v)**(-a) for v in self.v] # self.v**(-a) # weights","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='bounded_zipf', values=(self.v, self.p) )","  ","  def __str__(self):","    return \"BoundedZipf([{}, {}], a= {})\".format(self.l_l, self.u_l, self.a)","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    # if x < self.l_l: return 0","    # elif x >= self.u_l: return 1","    # else:","    #   return sum(self.p[:(x-self.l_l+1) ] )","    return self.dist.cdf(x)","  ","  def inv_cdf(self, p):","    return self.dist.ppf(p)","  ","  def tail(self, x):","    return 1 - self.cfd(x)","  ","  def mean(self):","    # return sum([v*self.p(i) for i,v in enumerate(self.v) ] )","    return self.dist.mean()","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class NegBinomial():","  def __init__(self, num_succ, p):","    RV.__init__(self, l_l=num_succ, u_l=float(\"Inf\") )","    self.p = p","    ","    self.dist = scipy.stats.nbinom(num_succ, p)","  ","  def __str__(self):","    return \"NegBinom[num_succ= {}, p= {}]\".format(self.l_l, self.p)","  ","  def cdf(self, x):","    return self.dist.cdf(x - self.l_l)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class Gamma():","  def __init__(self, num_exp, rate):","    RV.__init__(self, l_l=0, u_l=float(\"Inf\") )","    ","    self.shape, self.scale = num_exp, 1/rate","    # self.dist = numpy.random.gamma(shape, scale, size=1)","    self.dist = scipy.stats.gamma(self.shape, self.scale)","  ","  def __str__(self):","    return \"Gamma[shape= {}, scale= {}]\".format(self.shape, self.scale)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","if __name__ == \"__main__\":"]},{"action":"insertText","range":{"start":{"row":356,"column":0},"end":{"row":356,"column":24}},"text":"  plot_gensample_check()"}]}]],"redo":[]},"/tutorial.py":{"scrollTop":53,"scrollLeft":0,"selection":{"start":{"row":35,"column":2},"end":{"row":36,"column":16}},"lastUse":1515612836125,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":24},"end":{"row":142,"column":26}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":26},"end":{"row":142,"column":28}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":28},"end":{"row":142,"column":30}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":30},"end":{"row":142,"column":32}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":32},"end":{"row":142,"column":80}},"text":"feed_dict={input_ph: np.ones((1, input_size) ) }"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":80},"end":{"row":142,"column":81}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":51}},"text":"output"},{"action":"insertText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":46}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":46},"end":{"row":141,"column":47}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":47},"end":{"row":141,"column":48}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":48},"end":{"row":141,"column":49}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":85},"end":{"row":137,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":137,"column":0},"end":{"row":137,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":4},"end":{"row":137,"column":85}},"text":"hidden1_vs = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='hidden1')"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":144,"column":59},"end":{"row":145,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":145,"column":0},"end":{"row":145,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":4},"end":{"row":142,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":143,"column":4},"end":{"row":143,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":144,"column":4},"end":{"row":144,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":145,"column":63}},"text":"hidden1_gradient = sess.run(tf.gradients(loss, hidden1_vs),"},{"action":"insertText","range":{"start":{"row":145,"column":63},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":146,"column":0},"end":{"row":147,"column":0}},"lines":["                                feed_dict={input_ph: np.ones((1, input_size) ) } )"]},{"action":"insertText","range":{"start":{"row":147,"column":0},"end":{"row":147,"column":59}},"text":"    print(\"hidden1_gradient= {}\".format(hidden1_gradient) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":49}},"text":"loss"},{"action":"insertText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":46}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":46},"end":{"row":145,"column":47}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":47},"end":{"row":145,"column":48}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":48},"end":{"row":145,"column":49}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":49},"end":{"row":145,"column":50}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":50},"end":{"row":145,"column":51}},"text":"t"}]}]],"redo":[]}},"window":{"width":1366,"height":687,"top":0,"left":0,"isMaximized":true}}