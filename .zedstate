{"split":"2-0","session.current":["/learning_shortestq_wmpi.py","/learning_shortestq.py"],"session.open":{"/learning_shortestq_wmpi.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":8,"column":0},"end":{"row":8,"column":0}},"lastUse":1516312603855,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":13}},"text":"import pprint"},{"action":"insertText","range":{"start":{"row":0,"column":13},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":6,"column":0}},"lines":["import numpy as np","","from patch import *","from rvs import *","from sim import *"]},{"action":"insertText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":24}},"text":"from scheduling import *"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":6,"column":24},"end":{"row":7,"column":0}},"text":"\n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":7,"column":0},"end":{"row":8,"column":0}},"text":"\n"}]}]],"redo":[]},"/learning_shortestq.py":{"scrollTop":3070,"scrollLeft":0,"selection":{"start":{"row":231,"column":33},"end":{"row":231,"column":33}},"lastUse":1516312587957,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":13}},"text":"import pprint"},{"action":"insertText","range":{"start":{"row":0,"column":13},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":237,"column":0}},"lines":["import numpy as np","","from patch import *","from rvs import *","from sim import *","from scheduling import *","","# *************************  Learning shortest-q scheduling on the fly  ************************** #","# Learning from single trajectory at a time ended up having too much variance","class ShortestQLearning_SingleTraj(object):","  def __init__(self, env, n):","    self.env = env","    self.n = n","    ","    slowdown_dist = Dolly() # DUniform(1, 1)","    self.q_l = [FCFS(i, env, slowdown_dist, out=self) for i in range(self.n) ]","    self.jid_info_m = {}","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    # ","    self.scher = DeepScher(n, n)","    ","    self.training_len = 1000","    self.training_on = False","    self.jid_to_wait_l = []","    ","    self.action_correctness_l = []","  ","  def reset_training(self, jid):","    log(WARNING, \"started with jid= {}\".format(jid) )","    self.training_on = True","    self.jid_head_of_training = jid","    self.jid_tail_of_training = jid + self.training_len-1","    self.jid_to_wait_l = list(range(self.jid_head_of_training, self.jid_tail_of_training+1) )","    ","    self.action_correctness_l.clear()","  ","  def __repr__(self):","    return \"ShortestQLearning_SingleTraj[n= {}]\".format(self.n)","  ","  def state(self):","    return np.mean(np.array([q.length() for q in self.q_l] ) )","  ","  def run(self):","    while True:","      j = (yield self.store.get() )","      ","      s = self.state()","      # print(\"s= {}\".format(s) )","      a = self.scher.get_random_action(s)","      ","      a_ = self.scher.get_max_action(s)","      c = 1 if (s[a_] - min(s) ) < 0.1 else 0","      self.action_correctness_l.append(c)","      ","      # print(\"qid= {}\".format(a) )","      if not self.training_on:","        self.reset_training(j._id)","      ","      self.jid_info_m[j._id] = {'ent': self.env.now, 'ts': j.tsize, 's': s, 'a': a}    ","      self.q_l[a].put(Task(j._id, j.k, j.tsize) )","  ","  def put(self, j):","    sim_log(DEBUG, self.env, self, \"recved\", j)","    return self.store.put(j)","  ","  def put_c(self, m):","    sim_log(DEBUG, self.env, self, \"recved\", m)","    jid = m['jid']","    if jid not in self.jid_info_m: # from jobs that were not included in training set","      return","    ","    jinfo = self.jid_info_m[jid]","    self.jid_info_m[jid]['sl'] = (self.env.now - jinfo['ent'] )/jinfo['ts']","    ","    try:","      self.jid_to_wait_l.remove(jid)","      # log(WARNING, \"removed jid= {}, len(jid_to_wait_l)= {}\".format(jid, len(self.jid_to_wait_l) ) )","    except:","      pass","      # log(WARNING, \"could not remove from jid_to_wait_l; jid= {}\".format(jid) )","    if len(self.jid_to_wait_l) == 0: # Ready for training","      print(\"Training:: with jobs from {} to {}\".format(self.jid_head_of_training, self.jid_tail_of_training) )","      self.training_on = False","      s_l, a_l, r_l = [], [], []","      for jid in range(self.jid_head_of_training, self.jid_tail_of_training+1):","        jinfo_m = self.jid_info_m[jid]","        s_l.append(jinfo_m['s'] )","        a_l.append(jinfo_m['a'] )","        r_l.append(1/jinfo_m['sl'] )","      print(\"Training:: sum(r_l)= {}\".format(sum(r_l) ) )","      print(\"Training:: freq of correct= {}\".format(sum(self.action_correctness_l)/len(self.action_correctness_l) ) )","      self.scher.train(s_l, a_l, r_l)","      self.jid_info_m.clear()","","def learning_shortestq_w_singletraj():","  env = simpy.Environment()","  jg = JG(env, ar=2.5, k_dist=DUniform(1, 1), tsize_dist=DUniform(1, 1) )","  mq = ShortestQLearning_SingleTraj(env, n=3)","  jg.out = mq","  jg.init()","  env.run(until=1000*100) # 50000*1","","# ***************  Learning shortest-q scheduling with multiple trajectories  ******************** #","# High variance with single trajectory is resolved with multiple trajectory sampling","class ShortestQLearning_MultTrajs(object):","  def __init__(self, env, n, scher, max_numj, sching=None, act_max=False):","    self.env = env","    self.n = n","    self.scher = scher","    self.max_numj = max_numj","    self.sching = sching","    self.act_max = act_max","    ","    slowdown_dist = Dolly() # DUniform(1, 1) # Bern(1, 10, 0.1)","    self.q_l = [FCFS(i, env, slowdown_dist, out_c=self) for i in range(self.n) ]","    self.jid_info_m = {}","    self.num_jcompleted = 0","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","  ","  def __repr__(self):","    return \"ShortestQLearning_MultTrajs[n= {}]\".format(self.n)","  ","  def state(self):","    # s = np.array([q.length() for q in self.q_l] )","    # sum_s = sum(s)","    # return s/sum_s if sum_s != 0 else s","    return [q.length() for q in self.q_l]","  ","  def run(self):","    while True:","      j = (yield self.store.get() )","      ","      s = self.state()","      if self.sching == \"jshortestq\":","        a = np.argmin(s)","      else:","        a = self.scher.get_random_action(s) if not self.act_max else self.scher.get_max_action(s)","      ","      self.jid_info_m[j._id] = {'ent': self.env.now, 'ts': j.tsize, 's': s, 'a': a}","      self.q_l[a].put(Task(j._id, j.k, j.tsize, j.tsize) )","  ","  def put(self, j):","    sim_log(DEBUG, self.env, self, \"recved\", j)","    return self.store.put(j)","  ","  def put_c(self, m):","    sim_log(DEBUG, self.env, self, \"recved\", m)","    jid = m['jid']","    jinfo = self.jid_info_m[jid]","    self.jid_info_m[jid]['sl'] = (self.env.now - jinfo['ent'] )/jinfo['ts']","    ","    self.num_jcompleted += 1","    if self.num_jcompleted > self.max_numj:","      self.env.exit()","  ","def learning_shortestq_w_mult_trajs():","  num_server = 3","  s_len, a_len, nn_len = num_server, num_server, 10","  straj_training = False # True","  scher = DeepScher(s_len, a_len, nn_len, straj_training)","  ","  N, T = 10, 1000 # 10, 100","  ","  def sample_traj(T, sching=None, act_max=False):","    reward = lambda sl : 1/sl","    # reward = lambda sl : 101 - sl","    ","    env = simpy.Environment()","    jg = JG(env, ar=0.5, k_dist=DUniform(1, 1), tsize_dist=DUniform(1, 1), max_sent=T)","    mq = ShortestQLearning_MultTrajs(env, num_server, scher, T, sching, act_max)","    jg.out = mq","    jg.init()","    env.run(until=50000)","    ","    t_s_l, t_a_l, t_r_l, t_sl_l = np.zeros((T, s_len)), np.zeros((T, 1)), np.zeros((T, 1)), np.zeros((T, 1))","    for t in range(T):","      jinfo_m = mq.jid_info_m[t+1]","      t_s_l[t, :] = jinfo_m['s']","      t_a_l[t, :] = jinfo_m['a']","      t_r_l[t, :] = reward(jinfo_m['sl'] )","      t_sl_l[t, :] = jinfo_m['sl']","    # print(\"t_r_l= {}\".format(t_r_l) )","    return t_s_l, t_a_l, t_r_l, t_sl_l","  ","  def evaluate(T, sching=None):","    num_shortest_found = 0","    t_s_l, t_a_l, t_r_l, t_sl_l = sample_traj(T, sching, act_max=False)","    for t in range(T):","      s, a = t_s_l[t], int(t_a_l[t][0] )","      # print(\"s= {}, a= {}\".format(s, a) )","      if s[a] - s.min() < 0.1:","        num_shortest_found += 1","    print(\"avg sl= {}, freq shortest found= {}\".format(np.mean(t_sl_l), num_shortest_found/T) )","  # ","  if straj_training:","    print(\"Eval with jshortestq:\")","    for _ in range(5):","      evaluate(T, sching='jshortestq')","    # value_ester = ValueEster(s_len)","    for i in range(100*100):","      t_s_l, t_a_l, t_r_l, _ = sample_traj(T)","      # value_ester.train_w_single_traj(t_s_l, t_r_l)","      scher.train_w_single_traj(t_s_l, t_a_l, t_r_l)","      ","      if i % 10 == 0:","        print(\"i= {}\".format(i) )","        evaluate(T)","  else:","    print(\"Eval before training:\")","    for _ in range(3):","      evaluate(T)","    print(\"Eval with jshortestq:\")","    for _ in range(3):","      evaluate(T, sching='jshortestq')","    for i in range(100*100):","      n_t_s_l, n_t_a_l, n_t_r_l, n_t_sl_l = np.zeros((N, T, s_len)), np.zeros((N, T, 1)), np.zeros((N, T, 1)), np.zeros((N, T, 1))","      for n in range(N):","        t_s_l, t_a_l, t_r_l, t_sl_l = sample_traj(T)","        n_t_s_l[n, :] = t_s_l","        n_t_a_l[n, :] = t_a_l","        n_t_r_l[n, :] = t_r_l","        n_t_sl_l[n, :] = t_sl_l","      scher.train_w_mult_trajs(n_t_s_l, n_t_a_l, n_t_r_l)","      print(\"i= {}, avg sl= {}\".format(i, np.mean(n_t_sl_l) ) )","      if i % 5 == 0:","        evaluate(T)","    print(\"Eval after learning:\")","    evaluate(40000)","","if __name__ == \"__main__\":","  # learning_shortestq_w_singletraj()","  learning_shortestq_w_mult_trajs()"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":7},"end":{"row":100,"column":8}},"text":"L"},{"action":"insertText","range":{"start":{"row":40,"column":12},"end":{"row":40,"column":13}},"text":"L"},{"action":"insertText","range":{"start":{"row":10,"column":6},"end":{"row":10,"column":7}},"text":"L"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":8},"end":{"row":100,"column":9}},"text":"e"},{"action":"insertText","range":{"start":{"row":40,"column":13},"end":{"row":40,"column":14}},"text":"e"},{"action":"insertText","range":{"start":{"row":10,"column":7},"end":{"row":10,"column":8}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":9},"end":{"row":100,"column":10}},"text":"a"},{"action":"insertText","range":{"start":{"row":40,"column":14},"end":{"row":40,"column":15}},"text":"a"},{"action":"insertText","range":{"start":{"row":10,"column":8},"end":{"row":10,"column":9}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":10},"end":{"row":100,"column":11}},"text":"r"},{"action":"insertText","range":{"start":{"row":40,"column":15},"end":{"row":40,"column":16}},"text":"r"},{"action":"insertText","range":{"start":{"row":10,"column":9},"end":{"row":10,"column":10}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":11},"end":{"row":100,"column":12}},"text":"n"},{"action":"insertText","range":{"start":{"row":40,"column":16},"end":{"row":40,"column":17}},"text":"n"},{"action":"insertText","range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":12},"end":{"row":100,"column":13}},"text":"i"},{"action":"insertText","range":{"start":{"row":40,"column":17},"end":{"row":40,"column":18}},"text":"i"},{"action":"insertText","range":{"start":{"row":10,"column":11},"end":{"row":10,"column":12}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":13},"end":{"row":100,"column":14}},"text":"n"},{"action":"insertText","range":{"start":{"row":40,"column":18},"end":{"row":40,"column":19}},"text":"n"},{"action":"insertText","range":{"start":{"row":10,"column":12},"end":{"row":10,"column":13}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":14},"end":{"row":100,"column":15}},"text":"g"},{"action":"insertText","range":{"start":{"row":40,"column":19},"end":{"row":40,"column":20}},"text":"g"},{"action":"insertText","range":{"start":{"row":10,"column":13},"end":{"row":10,"column":14}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":100,"column":24},"end":{"row":100,"column":32}},"text":"Learning"},{"action":"removeText","range":{"start":{"row":40,"column":29},"end":{"row":40,"column":37}},"text":"Learning"},{"action":"removeText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":31}},"text":"Learning"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":100,"column":24},"end":{"row":100,"column":25}},"text":"_"},{"action":"removeText","range":{"start":{"row":40,"column":29},"end":{"row":40,"column":30}},"text":"_"},{"action":"removeText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":24},"end":{"row":100,"column":25}},"text":"w"},{"action":"insertText","range":{"start":{"row":40,"column":29},"end":{"row":40,"column":30}},"text":"w"},{"action":"insertText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":100,"column":24},"end":{"row":100,"column":25}},"text":"_"},{"action":"insertText","range":{"start":{"row":40,"column":29},"end":{"row":40,"column":30}},"text":"_"},{"action":"insertText","range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":235,"column":24},"end":{"row":235,"column":25}},"text":"_"},{"action":"removeText","range":{"start":{"row":97,"column":24},"end":{"row":97,"column":25}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":9},"end":{"row":174,"column":18}},"text":"ShortestQ"},{"action":"removeText","range":{"start":{"row":125,"column":12},"end":{"row":125,"column":21}},"text":"ShortestQ"},{"action":"removeText","range":{"start":{"row":107,"column":6},"end":{"row":107,"column":15}},"text":"ShortestQ"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":17},"end":{"row":174,"column":40}},"text":"              ShortestQ"},{"action":"insertText","range":{"start":{"row":125,"column":20},"end":{"row":125,"column":43}},"text":"              ShortestQ"},{"action":"insertText","range":{"start":{"row":107,"column":14},"end":{"row":107,"column":23}},"text":"ShortestQ"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":174,"column":41},"end":{"row":174,"column":42}},"text":"w"},{"action":"insertText","range":{"start":{"row":125,"column":44},"end":{"row":125,"column":45}},"text":"w"},{"action":"insertText","range":{"start":{"row":107,"column":24},"end":{"row":107,"column":25}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":32},"end":{"row":125,"column":34}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":30},"end":{"row":125,"column":32}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":28},"end":{"row":125,"column":30}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":26},"end":{"row":125,"column":28}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":24},"end":{"row":125,"column":26}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":22},"end":{"row":125,"column":24}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":125,"column":20},"end":{"row":125,"column":22}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":236,"column":22},"end":{"row":236,"column":23}},"text":"_"},{"action":"removeText","range":{"start":{"row":160,"column":24},"end":{"row":160,"column":25}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":236,"column":26},"end":{"row":236,"column":27}},"text":"_"},{"action":"removeText","range":{"start":{"row":160,"column":28},"end":{"row":160,"column":29}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":30},"end":{"row":174,"column":31}},"text":" "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":28},"end":{"row":174,"column":30}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":26},"end":{"row":174,"column":28}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":24},"end":{"row":174,"column":26}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":22},"end":{"row":174,"column":24}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":20},"end":{"row":174,"column":22}},"text":"  "}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":18},"end":{"row":174,"column":20}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":174,"column":17},"end":{"row":174,"column":18}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":30},"end":{"row":228,"column":31}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":31},"end":{"row":228,"column":32}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":32},"end":{"row":228,"column":33}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":33},"end":{"row":228,"column":34}},"text":"v"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":34},"end":{"row":228,"column":35}},"text":"g"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":35},"end":{"row":228,"column":36}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":36},"end":{"row":228,"column":37}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":37},"end":{"row":228,"column":38}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":38},"end":{"row":228,"column":39}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":39},"end":{"row":228,"column":40}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":40},"end":{"row":228,"column":41}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":70},"end":{"row":228,"column":71}},"text":","},{"action":"insertText","range":{"start":{"row":228,"column":71},"end":{"row":228,"column":72}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":72},"end":{"row":228,"column":73}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":73},"end":{"row":228,"column":74}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":74},"end":{"row":228,"column":75}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":75},"end":{"row":228,"column":76}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":76},"end":{"row":228,"column":77}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":77},"end":{"row":228,"column":78}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":78},"end":{"row":228,"column":79}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":79},"end":{"row":228,"column":80}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":80},"end":{"row":228,"column":81}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":228,"column":80},"end":{"row":228,"column":87}},"text":"n_t_a_l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":229,"column":6},"end":{"row":229,"column":8}},"text":"# "},{"action":"insertText","range":{"start":{"row":230,"column":6},"end":{"row":230,"column":8}},"text":"# "}]}]],"redo":[]},"/scheduling.py":{"scrollTop":2993.5,"scrollLeft":0,"selection":{"start":{"row":190,"column":22},"end":{"row":190,"column":22}},"lastUse":1516312491635,"undo":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":101,"column":20},"end":{"row":101,"column":21}},"text":"9"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"3"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":101,"column":19},"end":{"row":101,"column":20}},"text":"9"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":101,"column":20},"end":{"row":101,"column":21}},"text":"9"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":101,"column":21},"end":{"row":101,"column":28}},"text":" # 0.99"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":165,"column":6},"end":{"row":165,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":164,"column":6},"end":{"row":164,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":251,"column":4},"end":{"row":251,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":4},"end":{"row":226,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":225,"column":4},"end":{"row":225,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":204,"column":4},"end":{"row":204,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":251,"column":4},"end":{"row":251,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":226,"column":4},"end":{"row":226,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":225,"column":4},"end":{"row":225,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":204,"column":4},"end":{"row":204,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":225,"column":4},"end":{"row":225,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":204,"column":4},"end":{"row":204,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":226,"column":4},"end":{"row":226,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":251,"column":4},"end":{"row":251,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":226,"column":4},"end":{"row":226,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":251,"column":4},"end":{"row":251,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":225,"column":4},"end":{"row":225,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":204,"column":4},"end":{"row":204,"column":6}},"text":"# "}]}]],"redo":[]},"/rep_sching.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"lastUse":1516312331071,"undo":[],"redo":[]},"/learning_howtorep.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":13,"column":28},"end":{"row":13,"column":28}},"lastUse":1516312330715,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":13}},"text":"import pprint"},{"action":"insertText","range":{"start":{"row":0,"column":13},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":186,"column":0}},"lines":["import numpy as np","","from patch import *","from rvs import *","from sim import *","from scheduling import DeepScher","","class LearningRepSching(object):","  def __init__(self, env, n, scher, max_numj, act_max=False, sching_m=None):","    self.env = env","    self.n = n","    self.scher = scher","    self.max_numj = max_numj","    self.act_max = act_max","    self.sching_m = sching_m","    ","    self.jq = JQ(env, list(range(self.n) ), self)","    # self.q_l = [PSQ(i, env, h=4, out=self.jq) for i in range(self.n) ]","    slowdown_dist = Dolly() # DUniform(1, 1)","    self.q_l = [FCFS(i, env, slowdown_dist, out=self.jq) for i in range(self.n) ]","    ","    self.jid_info_m = {}","    ","    self.store = simpy.Store(env)","    self.action = env.process(self.run() )","    ","    self.num_jcompleted = 0","    self.jsl_l = []","  ","  def __repr__(self):","    return \"LearningRepSching[n= {}]\".format(self.n)","  ","  def state(self):","    s = np.array([q.length() for q in self.q_l] )","    # sum_s = sum(s)","    # return s/sum_s if sum_s != 0 else s","    return s","  ","  def get_sorted_qids(self):","    # qid_length_m = {q._id: q.length() for q in self.q_l}","    # qid_length_l = sorted(qid_length_m.items(), key=operator.itemgetter(1) )","    # return [qid_length[0] for qid_length in qid_length_l]","    t_l = sorted([(q.length(), q._id) for q in self.q_l] )","    return [t[1] for t in t_l]","  ","  def sample_qids(self, n):","    # return random.sample(range(self.n), n)","    return self.get_sorted_qids()[0:n]","  ","  def run(self):","    while True:","      j = (yield self.store.get() )","      ","      s = self.state()","      if self.sching_m is None:","        a = self.scher.get_random_action(s) if not self.act_max else self.scher.get_max_action(s)","        toi_l = self.sample_qids(a+1)","      elif 'rep-to-idle' in self.sching_m:","        toi_l = [i for i, ql in enumerate(s) if ql == 0]","        if len(toi_l) == 0:","          a = 0","          toi_l = self.sample_qids(a+1)","        else:","          a = len(toi_l) - 1","      else:","        a = self.sching_m['n'] - 1","        toi_l = self.sample_qids(a+1)","      ","      for i in toi_l:","        self.q_l[i].put(Task(j._id, j.k, j.tsize) )","      self.jid_info_m[j._id] = {'ent': self.env.now, 'ts': j.tsize, 'qid_l': toi_l, 's': s, 'a': a}","  ","  def put(self, j):","    sim_log(DEBUG, self.env, self, \"recved\", j)","    return self.store.put(j)","  ","  def put_c(self, m):","    sim_log(DEBUG, self.env, self, \"recved\", m)","    jid = m['jid']","    jinfo = self.jid_info_m[jid]","    self.jid_info_m[jid]['sl'] = (self.env.now - jinfo['ent'] )/jinfo['ts']","    ","    for i in jinfo['qid_l']:","      if i not in m['deped_from']:","        self.q_l[i].put_c({'m': 'cancel', 'jid': jid} )","    ","    self.jsl_l.append(t)","    self.num_jcompleted += 1","    if self.num_jcompleted > self.max_numj:","      self.env.exit()","","def learning_repsching_w_mult_trajs():","  num_server = 6","  s_len, a_len = num_server, num_server","  nn_len = 10","  straj_training = False","  scher = DeepScher(s_len, a_len, nn_len, straj_training)","  ","  N, T = 10, 1000","  ","  def sample_traj(T, act_max=False, sching_m=None):","    # reward = lambda sl : 1/sl","    def reward(sl):","      # if sl < 12:","      #   sl = 1","      return 100/sl # 101 - sl","    ","    env = simpy.Environment()","    # ar=0.3, n=3","    # ar=0.6, n=6","    jg = JG(env, ar=0.6, k_dist=DUniform(1, 1), tsize_dist=DUniform(1, 1), max_sent=T)","    mq = LearningRepSching(env, num_server, scher, T, act_max, sching_m)","    jg.out = mq","    jg.init()","    env.run() # until=50000","    ","    t_s_l, t_a_l, t_r_l, t_sl_l = np.zeros((T, s_len)), np.zeros((T, 1)), np.zeros((T, 1)), np.zeros((T, 1))","    for t in range(T):","      jinfo_m = mq.jid_info_m[t+1]","      # print(\"t= {}, jinfo_m= {}\".format(t, jinfo_m) )","      t_s_l[t, :] = jinfo_m['s']","      t_a_l[t, :] = jinfo_m['a']","      t_r_l[t, :] = reward(jinfo_m['sl'] )","      t_sl_l[t, :] = jinfo_m['sl']","    return t_s_l, t_a_l, t_r_l, t_sl_l","    ","  def evaluate(T, sching_m=None):","    _, t_a_l, t_r_l, t_sl_l = sample_traj(T, False, sching_m)","    # print(\"t_a_l= {}\".format(t_a_l) )","    print(\"avg a= {}, avg sl= {}\".format(np.mean(t_a_l), np.mean(t_sl_l) ) )","  # ","  print(\"BEFORE training\")","  sching_m = {'rep-to-idle': 0}","  print(\"Eval with sching_m= {}\".format(sching_m) )","  for _ in range(3):","    evaluate(T, sching_m)","  ","  for n in range(1, num_server+1):","    sching_m = {'n': n}","    print(\"Eval with sching_m= {}\".format(sching_m) )","    for _ in range(3):","      evaluate(T, sching_m)","  # print(\"Eval before training:\")","  # for _ in range(3):","  #   evaluate(T)","  for i in range(100):","    print(\"i= {}\".format(i) )","    n_t_s_l, n_t_a_l, n_t_r_l, n_t_sl_l = np.zeros((N, T, s_len)), np.zeros((N, T, 1)), np.zeros((N, T, 1)), np.zeros((N, T, 1))","    for n in range(N):","      s_l, a_l, r_l, sl_l = sample_traj(T)","      n_t_s_l[n, :] = s_l","      n_t_a_l[n, :] = a_l","      n_t_r_l[n, :] = r_l","      n_t_sl_l[n, :] = sl_l","    print(\"avg a= {}, training avg sl= {}\".format(np.mean(n_t_a_l), np.mean(n_t_sl_l) ) )","    scher.train_w_mult_trajs(n_t_s_l, n_t_a_l, n_t_r_l)","    # if i % 1 == 0:","    #   print(\"eval:\")","    #   evaluate(T)","    if i % 5:","      continue","    for j in range(20):","      for _ in range(3):","        if j == 0:","          s = [0]*num_server","        else:","          s = np.random.randint(j*5, size=num_server)","          # sum_s = sum(s)","          # s = s if sum_s == 0 else s/sum_s","        a = scher.get_random_action(s)","        print(\"s= {}, a= {}\".format(s, a) )","  print(\"AFTER training\")","  evaluate(T=40000)","  ","  sching_m = {'rep-to-idle': 0}","  print(\"Eval with sching_m= {}\".format(sching_m) )","  evaluate(T, sching_m)","  ","  for n in range(1, num_server+1):","    sching_m = {'n': n}","    print(\"Eval with sching_m= {}\".format(sching_m) )","    evaluate(T, sching_m)","  ","if __name__ == \"__main__\":","  learning_repsching_w_mult_trajs()"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":112,"column":20},"end":{"row":112,"column":26}},"text":"Sching"},{"action":"removeText","range":{"start":{"row":31,"column":23},"end":{"row":31,"column":29}},"text":"Sching"},{"action":"removeText","range":{"start":{"row":8,"column":17},"end":{"row":8,"column":23}},"text":"Sching"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":112,"column":17},"end":{"row":112,"column":18}},"text":"H"},{"action":"insertText","range":{"start":{"row":31,"column":20},"end":{"row":31,"column":21}},"text":"H"},{"action":"insertText","range":{"start":{"row":8,"column":14},"end":{"row":8,"column":15}},"text":"H"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":112,"column":18},"end":{"row":112,"column":19}},"text":"o"},{"action":"insertText","range":{"start":{"row":31,"column":21},"end":{"row":31,"column":22}},"text":"o"},{"action":"insertText","range":{"start":{"row":8,"column":15},"end":{"row":8,"column":16}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":112,"column":19},"end":{"row":112,"column":20}},"text":"w"},{"action":"insertText","range":{"start":{"row":31,"column":22},"end":{"row":31,"column":23}},"text":"w"},{"action":"insertText","range":{"start":{"row":8,"column":16},"end":{"row":8,"column":17}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":112,"column":20},"end":{"row":112,"column":21}},"text":"t"},{"action":"insertText","range":{"start":{"row":31,"column":23},"end":{"row":31,"column":24}},"text":"t"},{"action":"insertText","range":{"start":{"row":8,"column":17},"end":{"row":8,"column":18}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":112,"column":21},"end":{"row":112,"column":22}},"text":"o"},{"action":"insertText","range":{"start":{"row":31,"column":24},"end":{"row":31,"column":25}},"text":"o"},{"action":"insertText","range":{"start":{"row":8,"column":18},"end":{"row":8,"column":19}},"text":"o"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":185,"column":14},"end":{"row":185,"column":20}},"text":"sching"},{"action":"removeText","range":{"start":{"row":92,"column":16},"end":{"row":92,"column":22}},"text":"sching"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":185,"column":11},"end":{"row":185,"column":12}},"text":"h"},{"action":"insertText","range":{"start":{"row":92,"column":13},"end":{"row":92,"column":14}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":185,"column":12},"end":{"row":185,"column":13}},"text":"o"},{"action":"insertText","range":{"start":{"row":92,"column":14},"end":{"row":92,"column":15}},"text":"o"},{"action":"insertText","range":{"start":{"row":185,"column":13},"end":{"row":185,"column":14}},"text":"w"},{"action":"insertText","range":{"start":{"row":92,"column":15},"end":{"row":92,"column":16}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":185,"column":14},"end":{"row":185,"column":15}},"text":"t"},{"action":"insertText","range":{"start":{"row":92,"column":16},"end":{"row":92,"column":17}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":185,"column":15},"end":{"row":185,"column":16}},"text":"o"},{"action":"insertText","range":{"start":{"row":92,"column":17},"end":{"row":92,"column":18}},"text":"o"}]}]],"redo":[]},"/run.sh":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":18,"column":10},"end":{"row":18,"column":27}},"lastUse":1516312188123,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":29}},"text":"$PYTHON shortestq_sching.py"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":29}},"text":"  $PYTHON shortestq_sching.py"},{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":["elif [ $1 = 's' ]; then"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":18,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":23}},"text":"elif [ $1 = 's' ]; then"},{"action":"insertText","range":{"start":{"row":17,"column":23},"end":{"row":18,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":27}},"text":"$PYTHON shortestq_sching.py"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":14},"end":{"row":17,"column":15}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":14},"end":{"row":17,"column":15}},"text":"r"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":13},"end":{"row":17,"column":14}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":13},"end":{"row":17,"column":14}},"text":"r"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":10},"end":{"row":18,"column":19}},"text":"shortestq"},{"action":"insertText","range":{"start":{"row":18,"column":10},"end":{"row":18,"column":11}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":11},"end":{"row":18,"column":12}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":12},"end":{"row":18,"column":13}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":2},"end":{"row":16,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":2},"end":{"row":16,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":2},"end":{"row":16,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":2},"end":{"row":16,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":2},"end":{"row":16,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":15,"column":2},"end":{"row":15,"column":4}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":10},"end":{"row":16,"column":11}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":11},"end":{"row":16,"column":12}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":12},"end":{"row":16,"column":13}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":13},"end":{"row":16,"column":14}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":14},"end":{"row":16,"column":15}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":15},"end":{"row":16,"column":16}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":16},"end":{"row":16,"column":17}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":17},"end":{"row":16,"column":18}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":16,"column":18},"end":{"row":16,"column":19}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":34},"end":{"row":16,"column":35}},"text":"g"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":33},"end":{"row":16,"column":34}},"text":"n"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":32},"end":{"row":16,"column":33}},"text":"i"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":31},"end":{"row":16,"column":32}},"text":"h"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":30},"end":{"row":16,"column":31}},"text":"c"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":29},"end":{"row":16,"column":30}},"text":"s"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":16,"column":28},"end":{"row":16,"column":29}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":10},"end":{"row":18,"column":11}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":11},"end":{"row":18,"column":12}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":12},"end":{"row":18,"column":13}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":13},"end":{"row":18,"column":14}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":14},"end":{"row":18,"column":15}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":15},"end":{"row":18,"column":16}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":16},"end":{"row":18,"column":17}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":17},"end":{"row":18,"column":18}},"text":"g"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":18},"end":{"row":18,"column":19}},"text":"_"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":22},"end":{"row":18,"column":29}},"text":"_sching"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":19},"end":{"row":18,"column":20}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":20},"end":{"row":18,"column":21}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":21},"end":{"row":18,"column":22}},"text":"w"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":22},"end":{"row":18,"column":23}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":23},"end":{"row":18,"column":24}},"text":"o"}]}]],"redo":[]},"/sim.py":{"scrollTop":42.5,"scrollLeft":0,"selection":{"start":{"row":26,"column":28},"end":{"row":26,"column":28}},"lastUse":1516311171801,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":58},"end":{"row":281,"column":59}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":59},"end":{"row":281,"column":60}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":60},"end":{"row":281,"column":61}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":61},"end":{"row":281,"column":62}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":62},"end":{"row":281,"column":63}},"text":"m"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":63},"end":{"row":281,"column":64}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":64},"end":{"row":281,"column":65}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":65},"end":{"row":281,"column":66}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":66},"end":{"row":281,"column":67}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":66},"end":{"row":281,"column":67}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":67},"end":{"row":281,"column":68}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":68},"end":{"row":281,"column":69}},"text":"j"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":69},"end":{"row":281,"column":70}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":281,"column":70},"end":{"row":281,"column":71}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":44,"column":8},"end":{"row":44,"column":14}},"text":"return"},{"action":"insertText","range":{"start":{"row":44,"column":8},"end":{"row":44,"column":60}},"text":"yield self.env.timeout(random.expovariate(self.ar) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":44,"column":31},"end":{"row":44,"column":58}},"text":"random.expovariate(self.ar)"},{"action":"insertText","range":{"start":{"row":44,"column":31},"end":{"row":44,"column":32}},"text":"f"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":32},"end":{"row":44,"column":33}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":33},"end":{"row":44,"column":34}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":34},"end":{"row":44,"column":35}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":35},"end":{"row":44,"column":36}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":36},"end":{"row":44,"column":37}},"text":"("}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":37},"end":{"row":44,"column":38}},"text":")"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":37},"end":{"row":44,"column":38}},"text":"'"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":38},"end":{"row":44,"column":39}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":38},"end":{"row":44,"column":39}},"text":"I"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":39},"end":{"row":44,"column":40}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":40},"end":{"row":44,"column":41}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":8},"end":{"row":44,"column":10}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":44,"column":47},"end":{"row":45,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":45,"column":0},"end":{"row":45,"column":8}},"text":"        "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":8},"end":{"row":45,"column":9}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":9},"end":{"row":45,"column":10}},"text":"e"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":10},"end":{"row":45,"column":11}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":11},"end":{"row":45,"column":12}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":12},"end":{"row":45,"column":13}},"text":"r"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":13},"end":{"row":45,"column":14}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":58},"end":{"row":37,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":6}},"text":"      "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":6},"end":{"row":37,"column":37}},"text":"if self.nsent >= self.max_sent:"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":37},"end":{"row":38,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":8},"end":{"row":38,"column":9}},"text":"c"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":10},"end":{"row":38,"column":11}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":11},"end":{"row":38,"column":12}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":12},"end":{"row":38,"column":13}},"text":"i"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":13},"end":{"row":38,"column":14}},"text":"n"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":14},"end":{"row":38,"column":15}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":15},"end":{"row":38,"column":16}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":45,"column":6},"end":{"row":45,"column":8}},"text":"# "},{"action":"insertText","range":{"start":{"row":46,"column":6},"end":{"row":46,"column":8}},"text":"# "},{"action":"insertText","range":{"start":{"row":47,"column":6},"end":{"row":47,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":45,"column":6},"end":{"row":45,"column":8}},"text":"# "},{"action":"removeText","range":{"start":{"row":46,"column":6},"end":{"row":46,"column":8}},"text":"# "},{"action":"removeText","range":{"start":{"row":47,"column":6},"end":{"row":47,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":37,"column":0},"end":{"row":38,"column":0}},"nl":"\n","lines":["      if self.nsent >= self.max_sent:"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":37,"column":0},"end":{"row":38,"column":0}},"nl":"\n","lines":["        continue"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":44,"column":0},"end":{"row":45,"column":0}},"nl":"\n","lines":["        # yield self.env.timeout(float('Inf') )"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":6},"end":{"row":36,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":60},"end":{"row":37,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":6}},"text":"      "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":6},"end":{"row":37,"column":58}},"text":"yield self.env.timeout(random.expovariate(self.ar) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":29},"end":{"row":37,"column":48}},"text":"random.expovariate("}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":38},"end":{"row":37,"column":39}},"text":")"}]},{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":37},"end":{"row":37,"column":38}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":29},"end":{"row":37,"column":30}},"text":"1"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":30},"end":{"row":37,"column":31}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":6},"end":{"row":37,"column":8}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":36,"column":6},"end":{"row":36,"column":8}},"text":"# "}]}]],"redo":[]},"/exp.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":37,"column":30},"end":{"row":37,"column":30}},"lastUse":1516136297409,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":37},"end":{"row":36,"column":38}},"text":"."}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":38},"end":{"row":36,"column":39}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":39},"end":{"row":36,"column":40}},"text":"h"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":40},"end":{"row":36,"column":41}},"text":"a"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":41},"end":{"row":36,"column":42}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":42},"end":{"row":36,"column":43}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":43},"end":{"row":36,"column":44}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":44},"end":{"row":36,"column":45}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":25},"end":{"row":36,"column":26}},"text":"\\"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":26},"end":{"row":36,"column":27}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":33,"column":9},"end":{"row":33,"column":16}},"text":"x.shape"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":9},"end":{"row":32,"column":16}},"text":"x.shape"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":16},"end":{"row":32,"column":17}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":17},"end":{"row":32,"column":18}},"text":" "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":18},"end":{"row":32,"column":19}},"text":"{"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":19},"end":{"row":32,"column":20}},"text":"}"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":20},"end":{"row":32,"column":21}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":21},"end":{"row":32,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":33,"column":24},"end":{"row":33,"column":31}},"text":"x.shape"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":33,"column":0},"end":{"row":34,"column":0}},"nl":"\n","lines":["  print(\"= \\n{}\".format() )"]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":38},"end":{"row":32,"column":45}},"text":"x.shape"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":45},"end":{"row":32,"column":46}},"text":","}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":46},"end":{"row":32,"column":47}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":2},"end":{"row":38,"column":35}},"text":"print(\"z= {}\".format(z.eval() ) )"},{"action":"insertText","range":{"start":{"row":38,"column":2},"end":{"row":38,"column":59}},"text":"print(\"y.shape= {}, y= \\n{}\".format(y.shape, y.eval() ) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"z"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":22},"end":{"row":38,"column":23}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":22},"end":{"row":38,"column":23}},"text":"z"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":38},"end":{"row":38,"column":39}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":38},"end":{"row":38,"column":39}},"text":"z"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":47},"end":{"row":38,"column":48}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":47},"end":{"row":38,"column":48}},"text":"z"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":37,"column":29},"end":{"row":37,"column":30}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":29},"end":{"row":37,"column":30}},"text":"0"}]}]],"redo":[]},"/tutorial.py":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":33,"column":24},"end":{"row":33,"column":24}},"lastUse":1516136268028,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":24},"end":{"row":142,"column":26}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":26},"end":{"row":142,"column":28}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":28},"end":{"row":142,"column":30}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":30},"end":{"row":142,"column":32}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":32},"end":{"row":142,"column":80}},"text":"feed_dict={input_ph: np.ones((1, input_size) ) }"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":80},"end":{"row":142,"column":81}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":51}},"text":"output"},{"action":"insertText","range":{"start":{"row":141,"column":45},"end":{"row":141,"column":46}},"text":"l"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":46},"end":{"row":141,"column":47}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":47},"end":{"row":141,"column":48}},"text":"s"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":141,"column":48},"end":{"row":141,"column":49}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":136,"column":85},"end":{"row":137,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":137,"column":0},"end":{"row":137,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":4},"end":{"row":137,"column":85}},"text":"hidden1_vs = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='hidden1')"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":82},"end":{"row":137,"column":83}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":137,"column":10},"end":{"row":137,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":144,"column":59},"end":{"row":145,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":145,"column":0},"end":{"row":145,"column":4}},"text":"    "}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":142,"column":4},"end":{"row":142,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":143,"column":4},"end":{"row":143,"column":6}},"text":"# "},{"action":"insertText","range":{"start":{"row":144,"column":4},"end":{"row":144,"column":6}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":4},"end":{"row":145,"column":63}},"text":"hidden1_gradient = sess.run(tf.gradients(loss, hidden1_vs),"},{"action":"insertText","range":{"start":{"row":145,"column":63},"end":{"row":146,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":146,"column":0},"end":{"row":147,"column":0}},"lines":["                                feed_dict={input_ph: np.ones((1, input_size) ) } )"]},{"action":"insertText","range":{"start":{"row":147,"column":0},"end":{"row":147,"column":59}},"text":"    print(\"hidden1_gradient= {}\".format(hidden1_gradient) )"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":10},"end":{"row":145,"column":11}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":57},"end":{"row":145,"column":58}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":46},"end":{"row":147,"column":47}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"1"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"2"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":49}},"text":"loss"},{"action":"insertText","range":{"start":{"row":145,"column":45},"end":{"row":145,"column":46}},"text":"o"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":46},"end":{"row":145,"column":47}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":47},"end":{"row":145,"column":48}},"text":"t"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":48},"end":{"row":145,"column":49}},"text":"p"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":49},"end":{"row":145,"column":50}},"text":"u"}]},{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":145,"column":50},"end":{"row":145,"column":51}},"text":"t"}]}]],"redo":[]},"/rvs.py":{"scrollTop":3349,"scrollLeft":0,"selection":{"start":{"row":203,"column":12},"end":{"row":203,"column":17}},"lastUse":1515960406195,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":17}},"text":"import matplotlib"},{"action":"insertText","range":{"start":{"row":0,"column":17},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":356,"column":0}},"lines":["matplotlib.rcParams['pdf.fonttype'] = 42","matplotlib.rcParams['ps.fonttype'] = 42","","matplotlib.use('Agg')","import matplotlib.pyplot as plot","","import math, random, numpy, csv","from scipy.stats import *","from patch import *","","class RV(): # Random Variable","  def __init__(self, l_l, u_l):","    self.l_l = l_l","    self.u_l = u_l","","class Exp(RV):","  def __init__(self, mu, D=0):","    RV.__init__(self, l_l=D, u_l=float(\"inf\") )","    self.D = D","    self.mu = mu","  ","  def __str__(self):","    return \"Exp(D={}, mu={})\".format(self.D, self.mu)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return math.exp(-self.mu*(x - self.D) )","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - math.exp(-self.mu*(x - self.D) )","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.mu*math.exp(-self.mu*(x - self.D) )","  ","  def mean(self):","    return self.D + 1/self.mu","  ","  def var(self):","    return 1/self.mu**2","  ","  def gen_sample(self):","    return self.D + random.expovariate(self.mu)","","class Pareto(RV):","  def __init__(self, loc, a):","    RV.__init__(self, l_l=loc, u_l=float(\"inf\") )","    self.loc = loc","    self.a = a","  ","  def __str__(self):","    return \"Pareto(loc= {}, a= {})\".format(self.loc, self.a)","  ","  def tail(self, x):","    if x <= self.l_l:","      return 1","    return (self.loc/x)**self.a","  ","  def cdf(self, x):","    if x <= self.l_l:","      return 0","    return 1 - (self.loc/x)**self.a","  ","  def pdf(self, x):","    if x <= self.l_l:","      return 0","    return self.a*self.loc**self.a / x**(self.a+1)","  ","  def dpdf_dx(self, x):","    if x <= self.l_l:","      return 0","    return sympy.mpmath.diff(lambda y: self.a*self.loc**self.a / y**(self.a+1), x)","  ","  def mean(self):","    if self.a <= 1:","      log(WARNING, \"Mean is Infinity; a= {} <= 1\".format(self.a) )","      return float(\"inf\")","    else:","      return self.loc*self.a/(self.a-1)","  ","  def var(self):","    if self.a <= 2:","      log(WARNING, \"Variance is Infinity; a= {} <= 2\".format(self.a) )","      return float(\"inf\")","    else:","      return self.a*self.loc**2 / (self.a-1)**2/(self.a-2)","  ","  def gen_sample(self):","    return ((numpy.random.pareto(self.a, 1) + 1)*self.loc)[0]","    # return pareto.ppf(numpy.random.uniform(0, 1), b=self.a, scale=self.loc)","","class TPareto(): # Truncated","  def __init__(self, l, u, a):","    RV.__init__(self, l_l=l, u_l=u)","    self.l = l","    self.u = u","    self.a = a","  ","  def __str__(self):","    return \"Pareto(l= {}, u= {}, a= {})\".format(self.l, self.u, self.a)","  ","  def cdf(self, x):","    if x < self.l: return 0","    elif x >= self.u: return 1","    else:","      return (1 - (self.l/x)**self.a)/(1 - (self.l/self.u)**self.a)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def mean(self):","    return self.moment(1)","  ","  def moment(self, k):","    if k == self.a:","      return math.log(self.u_l/self.l)","    else:","      return self.a*self.l**k/(self.a-k) * \\","             (1 - (self.l/self.u)**(self.a-k))/(1 - (self.l/self.u)**self.a)","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    return self.l*(1 - u*(1-(self.l/self.u)**self.a) )**(-1/self.a)","","def plot_gensample_check():","  l, u, a = 1, 10**5, 2","  rv = TPareto(l, u, a)","  ","  x_l = []","  for i in range(10**5):","    x_l.append(rv.gen_sample() )","  x_l = numpy.sort(x_l)","  x_l = x_l[::-1]","  # i_ = None","  # for i in range(len(x_l)-1, 0, -1):","  #   if x_l[i] > 1.01: i_ = i; break","  # x_l = x_l[:i_]","  y_l = numpy.arange(x_l.size)/x_l.size","  plot.plot(x_l, y_l, marker=next(marker), color=next(dark_color), linestyle=':', mew=mew, ms=ms)","  ","  y_l = []","  for x in x_l:","    y_l.append(rv.tail(x) )","  plot.plot(x_l, y_l, label=r'$Pareto(l= %.2f, u= %.2f, \\alpha= %.2f)$' % (l, u, a), color=next(dark_color), linestyle='-')","  plot.legend()","  plot.xscale('log')","  plot.yscale('log')","  plot.xlabel(r'$x$', fontsize=13)","  plot.ylabel(r'$p(X > x)$', fontsize=13)","  plot.title(r'$X \\sim$ {}'.format(rv) )","  plot.savefig(\"plot_gensample_check.png\")","  plot.gcf().clear()","","class Google(RV):","  def __init__(self, k):","    RV.__init__(self, l_l=0, u_l=float(\"inf\") )","    ","    self.k = k","    self.sample_l = []","    # with open(\"filtered_task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","    with open(\"task_lifetimes_for_jobs_w_num_task_{}.dat\".format(k), mode=\"rt\") as f:","      reader = csv.reader(f)","      for line in reader:","        self.sample_l.append(float(line[0] ) )","    self.sample_l.sort()","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"Google(k= \".format(self.k)","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class SimRV(RV):","  def __init__(self, sample_l):","    RV.__init__(self, l_l=min(sample_l), u_l=max(sample_l) )","    ","    self.sample_l = sample_l","    self.num_sample = len(self.sample_l)","  ","  def __str__(self):","    return \"SimRV\"","  ","  def mean(self):","    return sum(self.sample_l)/self.num_sample","  ","  def gen_sample(self):","    return self.sample_l[math.floor(self.num_sample*random.random() ) ]","","class Dolly(RV):","  # Kristen et al. A Better Model for Job Redundancy: Decoupling Server Slowdown and Job Size","  def __init__(self):","    RV.__init__(self, l_l=1, u_l=12)","  ","  def __str__(self):","    return \"Dolly\"","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    if u <= 0.23: return 1 + u/100","    u -= 0.23","    if u <= 0.14: return 2 + u/100","    u -= 0.14","    if u <= 0.09: return 3 + u/100","    u -= 0.09","    if u <= 0.03: return 4 + u/100","    u -= 0.03","    if u <= 0.08: return 5 + u/100","    u -= 0.08","    if u <= 0.1: return 6 + u/100","    u -= 0.1","    if u <= 0.04: return 7 + u/100","    u -= 0.04","    if u <= 0.14: return 8 + u/100","    u -= 0.14","    if u <= 0.12: return 9 + u/100","    u -= 0.12","    if u <= 0.021: return 10 + u/100","    u -= 0.021","    if u <= 0.007: return 11 + u/100","    u -= 0.007","    if u <= 0.002: return 12 + u/100","    return 12 + u/100 # for safety","","class Bern(RV):","  def __init__(self, L, U, p):","    RV.__init__(self, l_l=L, u_l=U)","    ","    self.p = p","  ","  def __str__(self):","    return \"Bern(l= {}, u= {}, p= {})\".format(self.l_l, self.u_l, self.p)","  ","  def mean(self):","    return (1 - self.p)*self.l_l + self.p*self.u_l","  ","  def gen_sample(self):","    u = random.uniform(0, 1)","    return self.u_l + u/100 if u <= self.p else self.l_l + u/100","","# class BernPareto(RV):","#   def __init__(self, U, L, p, loc, a):","#     RV.__init__(self, l_l=U*loc, u_l=float(\"Inf\") )","    ","#     self.bern = Bern(U, L, p)","#     self.pareto = Pareto(loc, a)","  ","#   def __str__(self):","#     return \"Bern*Pareto\"","  ","#   def mean(self):","#     return self.bern.mean()*self.pareto.mean()","  ","#   def gen_sample(self):","#     return self.bern.gen_sample()*self.pareto.gen_sample()","","class DUniform(): # Discrete","  def __init__(self, lb, ub):","    RV.__init__(self, l_l=lb, u_l=ub)","  ","  def __str__(self):","    return \"DUniform[{}, {}]\".format(self.l_l, self.u_l)","  ","  def mean(self):","    return (self.u_l + self.l_l)/2","  ","  def pdf(self, x):","    return float(1/(self.u_l - self.l_l + 1) )","  ","  def gen_sample(self):","    return random.randint(self.l_l, self.u_l)","","class BoundedZipf():","  def __init__(self, lb, ub, a=1):","    RV.__init__(self, l_l=lb, u_l=ub)","    self.a = a","    ","    self.v = numpy.arange(self.l_l, self.u_l+1) # values","    w_l = [float(v)**(-a) for v in self.v] # self.v**(-a) # weights","    self.p = [w/sum(w_l) for w in w_l]","    self.dist = scipy.stats.rv_discrete(name='bounded_zipf', values=(self.v, self.p) )","  ","  def __str__(self):","    return \"BoundedZipf([{}, {}], a= {})\".format(self.l_l, self.u_l, self.a)","  ","  def pdf(self, x):","    return self.dist.pmf(x)","  ","  def cdf(self, x):","    # if x < self.l_l: return 0","    # elif x >= self.u_l: return 1","    # else:","    #   return sum(self.p[:(x-self.l_l+1) ] )","    return self.dist.cdf(x)","  ","  def inv_cdf(self, p):","    return self.dist.ppf(p)","  ","  def tail(self, x):","    return 1 - self.cfd(x)","  ","  def mean(self):","    # return sum([v*self.p(i) for i,v in enumerate(self.v) ] )","    return self.dist.mean()","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class NegBinomial():","  def __init__(self, num_succ, p):","    RV.__init__(self, l_l=num_succ, u_l=float(\"Inf\") )","    self.p = p","    ","    self.dist = scipy.stats.nbinom(num_succ, p)","  ","  def __str__(self):","    return \"NegBinom[num_succ= {}, p= {}]\".format(self.l_l, self.p)","  ","  def cdf(self, x):","    return self.dist.cdf(x - self.l_l)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","class Gamma():","  def __init__(self, num_exp, rate):","    RV.__init__(self, l_l=0, u_l=float(\"Inf\") )","    ","    self.shape, self.scale = num_exp, 1/rate","    # self.dist = numpy.random.gamma(shape, scale, size=1)","    self.dist = scipy.stats.gamma(self.shape, self.scale)","  ","  def __str__(self):","    return \"Gamma[shape= {}, scale= {}]\".format(self.shape, self.scale)","  ","  def cdf(self, x):","    return self.dist.cdf(x)","  ","  def tail(self, x):","    return 1 - self.cdf(x)","  ","  def gen_sample(self):","    return self.dist.rvs(size=1)","","if __name__ == \"__main__\":"]},{"action":"insertText","range":{"start":{"row":356,"column":0},"end":{"row":356,"column":24}},"text":"  plot_gensample_check()"}]}]],"redo":[]},"/patch.py":{"scrollTop":55,"scrollLeft":0,"selection":{"start":{"row":18,"column":16},"end":{"row":18,"column":16}},"lastUse":1515957790886,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":46}},"text":"import inspect, math, mpmath, scipy, itertools"},{"action":"insertText","range":{"start":{"row":0,"column":46},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":192,"column":0}},"lines":["from scipy import special","","# dark_color = itertools.cycle(('green', 'red', 'blue', 'turquoise', 'goldenrod', 'purple', 'gray', 'brown', 'magenta', 'gold', 'olive', 'orangered', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray'))","dark_color = itertools.cycle(('green', 'red', 'blue', 'goldenrod', 'magenta', 'purple', 'gray', 'brown', 'turquoise', 'gold', 'olive', 'silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'darkgray', 'orangered'))","light_color = itertools.cycle(('silver', 'rosybrown', 'plum', 'lightsteelblue', 'lightpink', 'orange', 'turquoise'))","linestyle = itertools.cycle(('-', '--', '-.', ':') )","marker = itertools.cycle(('^', 'p', 'd', '+', 'v', '<', '>', '1' , '2', '3', '4', 'x') )","skinny_marker_l = ['x', '+', '1', '2', '3', '4']","","mew, ms = 3, 5","","INFO = 0","DEBUG = 1","WARNING = 2","ERROR = 3","","# DEBUG_LEVEL = INFO","DEBUG_LEVEL = WARNING","# DEBUG_LEVEL = ERROR","","debug_level__string_map = {INFO: \"INFO\", DEBUG: \"DEBUG\", WARNING: \"WARNING\", ERROR: \"ERROR\"}","","\"\"\"","*log: To have a unified logging which can be refactored easily","\"\"\"","def sim_log(dlevel, env, caller, action, affected):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  env= simpy.Environment","  caller= string -- name of the sim component acting","  action= string","  affected= any -- whatever component being acted on/with e.g., packet","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{} t: {:.2f}] {} {}\\n\\t{}\".format(debug_level__string_map[dlevel], env.now, caller, action, affected) )","","def log(dlevel, log):","  \"\"\"","  Parameters","  ----------","  dlevel= int -- debug level","  log= string to be logged","  \"\"\"","  if DEBUG_LEVEL <= dlevel:","    print(\"{}] {}:: {}\".format(debug_level__string_map[dlevel], inspect.stack()[1][3], log) )","","def list_to_str(l):","  return \",\".join(\"%s\" % e for e in l)","","def H_cont(n):","  return mpmath.quad(lambda x: (1-x**n)/(1-x), [0, 1] )","","def H(n):","  if n == 0:","    return 0","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/i)","  return sum_","","def H_2(n):","  sum_ = 0","  for i in range(1, n+1):","    sum_ += float(1/(i**2) )","  return sum_","","def gen_H(n, k):","  sum_ = 0","  for i in range(1, n+1):","    if (i - k) == 0:","      continue","    sum_ += float(1/(i*(i - k) ) )","  return sum_","","def binomial(n, k):","  if n == k:","    return 1","  elif k == 1:","    return n","  elif k == 0:","    return 1","  elif k > n:","    return 0","  else:","    return math.factorial(n)/math.factorial(k)/math.factorial(n-k)","","# def binomial(x, y):","#   try:","#     binom = factorial(x) // factorial(y) // factorial(x - y)","#   except ValueError:","#     binom = 0","#   return binom","","def I(u_l, m, n):","  den = B(m, n)","  if den == 0:","    return None","  return B(m, n, u_l=u_l)/den","  # return scipy.special.betainc(m, n, u_l)","","def B(m, n, u_l=1):","  # if u_l == 1:","  #   return scipy.special.beta(m, n)","  return mpmath.quad(lambda x: x**(m-1) * (1-x)**(n-1), [0, u_l] )","  # else:","  #   return I(u_l, m, n)*B(m, n)","","def G(z):","  return scipy.special.gamma(z)","  # return mpmath.quad(lambda x: x**(z-1) * math.exp(-z), [0, mpmath.inf] )","","# Order stats","def cdf_n_k(n, k, X, x): # Pr{X_n:k < x}","  cdf = 0","  for i in range(k, n+1):","    cdf += binomial(n, i) * X.cdf(x)**i * X.tail(x)**(n-i)","  return cdf","","def moment_i_n_k(i, n, k, X): # E[X_n:k]","  return mpmath.quad(lambda x: i*x**(i-1) * (1 - cdf_n_k(n, k, X, x) ), [0, mpmath.inf] )","","# Qing","def PK(E_V, E_V_2, ar):","  if ar*E_V >= 1:","    return None","  E_T = E_V + ar*E_V_2/2/(1 - ar*E_V)","  if E_T > 100: return None","  return E_T","","def fit_pareto(s_l):","  n = len(s_l)","  ","  fit_upper_tail = False # True","  if not fit_upper_tail:","    l = s_l[-1]","    D = 0","    for s in s_l:","      D += math.log(s) - math.log(l)","    a = (n-1)/D","  elif fit_upper_tail:","    l = s_l[-1]","    i = int(math.sqrt(n) ) # int(n*0.3)","    s_l = s_l[:i]","    l_ = s_l[-1]","    D = 0","    for s in s_l:","      D += math.log(s) - math.log(l_)","    a = i/D","  # log(WARNING, \"done; l= {}, a= {}\".format(l, a) )","  return l, a","","def fit_tpareto(s_l):","  # s_l is ordered in descending order","  n = len(s_l)","  log(WARNING, \"n= {}\".format(n) )","  fit_upper_tail = False # True","  def solve_a(eq):","    a = 0.01","    _a = None","    while True:","      if eq(a) > 0:","        _a = a","        a += 0.01","      else:","        return _a if _a is not None else 0.01","  ","  u = s_l[0]","  if not fit_upper_tail:","    l = s_l[-1]","    r = l/u","    # Did not work somehow","    # a = sympy.Symbol('a')","    # a = sympy.solve(n/a + n*r**a*math.log(r)/(1-r**a) - sum([math.log(x/l) for x in s_l] ) )","    a = solve_a(lambda a: n/a + n*r**a*math.log(r)/(1-r**a) - sum([math.log(x/l) for x in s_l] ) )","  else:","    i = int(math.sqrt(n) ) # int(n*0.3)","    X_ip1 = s_l[i+1]","    r = X_ip1/u","    a = solve_a(lambda a: i/a + i*r**a*math.log(r)/(1-r**a) - sum([math.log(x) - math.log(X_ip1) for x in s_l[:i+1] ] ) )","    l = i**(1/a) * X_ip1*(n - (n-i)*(X_ip1/u)**a)**(-1/a)","  log(WARNING, \"done; l= {}, u= {}, a= {}\".format(l, u, a) )","  return l, u, a","","def fit_sexp(s_l):","  # https://www.statlect.com/fundamentals-of-statistics/exponential-distribution-maximum-likelihood","  D = min(s_l)","  n = len(s_l)","  mu = n/(sum(s_l) - n*D)","  "]},{"action":"insertText","range":{"start":{"row":192,"column":0},"end":{"row":192,"column":14}},"text":"  return D, mu"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":18},"end":{"row":18,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":18,"column":0},"end":{"row":19,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":17,"column":0},"end":{"row":17,"column":2}},"text":"# "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":18,"column":0},"end":{"row":18,"column":2}},"text":"# "}]}]],"redo":[]}},"window":{"width":1920,"height":999,"top":0,"left":0,"isMaximized":true}}